var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.511,1,2.164]],["body/controllers/AppController.html",[0,2.494,1,3.572,2,2.629,3,0.266,4,0.312,5,0.312,6,3.717,7,0.36,8,1.588,9,5.161,10,1.391,11,0.029,12,0.749,13,4.421,14,1.292,15,0.92,16,0.631,17,0.883,18,3.193,19,3.717,20,0.36,21,0.057,22,3.717,23,3.253,24,2.906,25,1.033,26,4.421,27,0.023,28,0.023]],["title/modules/AppModule.html",[29,1.294,30,2.164]],["body/modules/AppModule.html",[1,3.561,2,3.222,3,0.223,4,0.262,5,0.262,11,0.029,16,0.725,17,0.74,18,3.325,19,3.112,20,0.301,21,0.048,27,0.021,28,0.021,29,2.129,30,4.25,31,2.634,32,2.009,33,2.433,34,2.433,35,2.009,36,3.78,37,2.433,38,3.112,39,3.112,40,3.112,41,3.325,42,3.644,43,3.191,44,2.433,45,2.433,46,3.702,47,3.572,48,3.702,49,3.702,50,3.572,51,3.702,52,3.572,53,3.702,54,3.702,55,2.433]],["title/injectables/AppService.html",[18,1.787,56,0.558]],["body/injectables/AppService.html",[3,0.281,4,0.33,5,0.33,7,0.38,8,1.641,9,5.256,11,0.028,12,0.79,14,1.364,15,0.951,16,0.542,17,0.932,18,3.047,20,0.38,21,0.06,25,1.09,27,0.024,28,0.024,56,0.951,57,1.979,58,3.922,59,4.666,60,3.922,61,3.922,62,4.666]],["title/injectables/EmailHelperService.html",[56,0.558,63,1.787]],["body/injectables/EmailHelperService.html",[3,0.216,4,0.253,5,0.253,7,0.292,8,1.388,10,1.127,11,0.029,12,0.805,14,1.047,15,1.105,16,0.619,17,0.716,20,0.292,21,0.046,27,0.02,28,0.02,56,0.805,57,1.519,63,2.578,64,3.922,65,2.354,66,0.737,67,1.805,68,5.104,69,3.17,70,5.331,71,3.582,72,5.907,73,5.907,74,5.677,75,3.582,76,1.213,77,0.972,78,0.552,79,1.213,80,1.644,81,1.783,82,2.13,83,2.07,84,4.751,85,3.011,86,3.011,87,1.213,88,2.635,89,2.13,90,1.783,91,3.17,92,2.13,93,3.582]],["title/injectables/FormatResponseInterceptor.html",[56,0.558,94,2.164]],["body/injectables/FormatResponseInterceptor.html",[3,0.235,4,0.276,5,0.276,7,0.318,8,1.469,11,0.029,12,0.661,14,1.141,16,0.645,17,0.78,20,0.318,21,0.05,25,1.174,27,0.021,28,0.021,56,0.851,57,1.656,76,1.322,77,1.06,78,0.453,79,1.322,94,3.303,95,4.225,96,3.282,97,3.697,98,3.697,99,2.693,100,4.089,101,4.317,102,3.904,103,1.944,104,2.767,105,3.697,106,3.904,107,1.791,108,2.502,109,1.791,110,1.791,111,1.423,112,3.282,113,2.872,114,3.904,115,2.321,116,5.026,117,5.026,118,3.282,119,2.118,120,5.026,121,3.282,122,2.118,123,3.904]],["title/classes/HttpExceptionFilter.html",[21,0.043,124,2.423]],["body/classes/HttpExceptionFilter.html",[3,0.239,4,0.28,5,0.28,7,0.322,8,1.482,11,0.029,12,0.67,14,1.157,15,0.67,16,0.589,17,0.791,20,0.322,21,0.051,27,0.022,28,0.022,76,1.34,77,1.074,78,0.46,79,1.34,108,2.524,109,1.816,110,2.326,111,2.15,115,2.353,119,2.751,124,3.73,125,1.971,126,4.262,127,4.262,128,3.327,129,5.594,130,3.2,131,5.07,132,4.959,133,4.115,134,5.899,135,3.958,136,3.958,137,3.958,138,3.327,139,3.958,140,3.958,141,5.07,142,3.958,143,3.958,144,3.958,145,3.958,146,5.07,147,3.958]],["title/classes/HttpResponseEntity.html",[21,0.043,148,2.164]],["body/classes/HttpResponseEntity.html",[3,0.195,4,0.228,5,0.228,7,0.263,8,1.294,11,0.029,12,0.965,14,0.943,15,1.04,20,0.361,21,0.042,25,0.754,27,0.019,28,0.019,66,0.687,67,2.11,76,1.499,77,1.202,78,0.662,79,1.499,80,2.496,81,2.709,108,2.932,111,1.177,115,3.652,119,3.454,122,3.421,125,1.607,148,3.323,149,3.871,150,2.374,151,5.055,152,5.055,153,3.227,154,4.428,155,1.795,156,5.163,157,4.428,158,3.747,159,3.227,160,3.227,161,3.227,162,3.227,163,2.121,164,3.227,165,3.227,166,3.227,167,1.177,168,3.227]],["title/interfaces/IConfig.html",[169,1.2,170,2.164]],["body/interfaces/IConfig.html",[3,0.203,4,0.238,5,0.238,7,0.275,11,0.029,15,1.126,16,0.6,20,0.371,25,1.066,27,0.019,28,0.019,66,0.708,78,0.76,80,1.547,83,2.02,133,3.356,155,1.692,169,1.229,170,3.398,171,2.005,172,2.834,173,3.006,174,4.866,175,5.016,176,3.294,177,4.076,178,6.205,179,3.356,180,3.371,181,3.356,182,3.371,183,3.356,184,3.371,185,1.141,186,1.679,187,2.834,188,2.834,189,1.935,190,2.834,191,2.834,192,2.834,193,2.48,194,1.43,195,2.834,196,2.48,197,2.834,198,2.834]],["title/injectables/InvokeRecordInterceptor.html",[56,0.558,199,2.164]],["body/injectables/InvokeRecordInterceptor.html",[3,0.206,4,0.242,5,0.242,7,0.278,8,1.346,11,0.029,12,0.78,14,0.999,16,0.605,17,0.683,20,0.278,21,0.044,23,3.831,24,3.423,25,0.799,27,0.02,28,0.02,56,0.78,57,1.45,66,0.715,67,1.763,76,1.158,77,0.928,78,0.397,79,1.158,80,1.569,81,1.703,97,3.388,98,3.388,99,2.557,100,3.831,101,4.099,103,1.703,104,2.593,105,3.388,107,1.569,108,2.293,109,1.569,110,1.569,111,2.12,112,2.875,113,2.516,118,2.875,167,1.679,199,3.027,200,4.378,201,2.875,202,4.099,203,3.42,204,4.606,205,3.42,206,2.39,207,3.42,208,2.034,209,5.208,210,3.42,211,3.42,212,5.208,213,5.208,214,4.606,215,3.42,216,3.42,217,3.42,218,4.606,219,4.606,220,3.42,221,3.42,222,3.42,223,3.42]],["title/injectables/JWTHelperService.html",[56,0.558,224,1.787]],["body/injectables/JWTHelperService.html",[3,0.198,4,0.232,5,0.232,7,0.268,8,1.31,10,1.41,11,0.029,12,0.928,14,1.31,16,0.637,17,0.657,20,0.268,21,0.042,25,1.047,27,0.019,28,0.019,56,0.759,57,1.394,65,2.16,66,0.696,67,2.005,76,1.518,77,1.217,78,0.637,79,1.518,87,1.113,91,2.666,185,1.113,224,2.433,225,4.823,226,3.521,227,3.521,228,4.483,229,4.483,230,4.483,231,3.288,232,3.286,233,3.26,234,4.033,235,4.483,236,3.286,237,3.298,238,3.286,239,2.666,240,3.286,241,1.954,242,1.636,243,2.16,244,2.763,245,4.483,246,2.433,247,3.769,248,2.763,249,1.291,250,3.286,251,1.198,252,3.286,253,3.769,254,3.286,255,2.763,256,3.286,257,3.286]],["title/interfaces/JwtUserData.html",[169,1.2,258,1.958]],["body/interfaces/JwtUserData.html",[0,1.326,3,0.174,4,0.204,5,0.204,7,0.235,11,0.029,15,0.963,16,0.679,17,0.577,20,0.334,21,0.037,25,0.957,27,0.017,28,0.017,29,1.135,56,0.694,66,0.636,67,1.388,78,0.602,87,1.388,90,1.439,99,1.881,103,1.439,104,2.041,107,1.326,109,1.881,110,1.326,111,1.996,122,1.568,130,1.568,155,1.392,167,1.494,169,1.494,171,1.718,173,2.224,185,1.853,189,1.225,194,1.225,206,2.379,208,1.718,227,2.833,233,2.438,239,1.718,242,1.439,246,2.97,249,2.151,251,1.996,258,2.833,259,1.899,260,2.379,261,3.131,262,2.438,263,3.408,264,1.718,265,1.568,266,1.568,267,2.125,268,2.125,269,1.568,270,1.899,271,2.125,272,1.899,273,1.899,274,2.694,275,3.016,276,1.899,277,2.125,278,1.899,279,1.899,280,2.021,281,3.505,282,2.125,283,2.125,284,3.016,285,2.224,286,1.718,287,2.125,288,1.718,289,2.125,290,1.718,291,2.125,292,2.125,293,2.125,294,2.125,295,1.718,296,1.899]],["title/guards/LoginGuard.html",[269,1.787,297,2.423]],["body/guards/LoginGuard.html",[0,1.334,3,0.175,4,0.205,5,0.205,7,0.237,8,1.203,11,0.029,12,0.492,14,0.849,15,0.697,16,0.68,17,0.581,20,0.335,21,0.038,25,0.962,27,0.017,28,0.017,29,1.142,56,0.697,66,0.451,67,1.76,76,0.984,77,0.789,78,0.338,79,0.984,87,1.394,90,1.447,99,2.385,103,2.05,104,2.38,107,1.334,109,1.889,110,1.334,111,2,122,1.577,130,1.577,155,0.849,167,1.501,169,1.501,173,2.234,185,1.394,189,1.746,194,1.233,206,2.385,208,1.729,227,3.091,233,2.448,239,1.729,242,1.447,246,2.234,249,1.618,251,1.501,258,2.448,259,1.911,260,1.889,261,3.606,262,2.448,263,3.606,264,1.729,265,1.577,266,1.577,267,2.138,268,2.138,269,2.234,270,2.706,271,2.138,272,1.911,273,1.911,274,2.706,275,3.029,276,1.911,277,2.138,278,1.911,279,1.911,280,2.027,281,3.516,282,2.138,283,2.138,284,3.029,285,2.234,286,1.729,287,2.138,288,1.729,289,2.138,290,1.729,291,2.138,292,2.138,293,2.138,294,2.138,295,1.729,296,1.911,298,2.138,299,2.444,300,2.907]],["title/classes/LoginUserVo.html",[21,0.043,231,1.787]],["body/classes/LoginUserVo.html",[3,0.253,4,0.297,5,0.297,7,0.342,11,0.028,12,0.974,15,1.125,20,0.342,21,0.054,27,0.022,28,0.022,66,0.817,78,0.668,83,1.532,125,2.092,155,1.539,169,1.532,185,1.422,189,2.233,231,2.857,243,3.963,249,1.651,251,1.532,301,3.091,302,4.231,303,4.231,304,4.164,305,4.201,306,4.201,307,4.201,308,2.279,309,2.498,310,2.761,311,2.761,312,2.761,313,2.498,314,2.761]],["title/entities/Permission.html",[260,1.511,315,1.397]],["body/entities/Permission.html",[3,0.247,4,0.289,5,0.289,7,0.333,10,1.787,11,0.029,12,0.962,15,1.012,16,0.475,20,0.333,21,0.053,27,0.022,28,0.022,66,0.804,77,1.111,78,0.66,82,3.379,115,3.379,155,1.514,251,1.492,260,2.377,308,3.083,315,2.197,316,2.434,317,3.441,318,3.811,319,3.811,320,4.394,321,4.093,322,3.811,323,4.093,324,4.181,325,4.093,326,4.181,327,2.434,328,3.811]],["title/guards/PermissionGuard.html",[297,2.423,329,2.164]],["body/guards/PermissionGuard.html",[3,0.218,4,0.256,5,0.256,7,0.295,8,1.398,11,0.029,12,0.613,14,1.057,16,0.688,17,0.723,20,0.295,21,0.047,25,1.251,27,0.02,28,0.02,56,0.81,66,0.561,67,1.619,76,1.225,77,0.982,78,0.42,79,1.225,87,1.619,90,1.801,99,2.615,103,2.381,104,2.667,107,1.66,109,1.66,110,1.66,111,1.953,163,2.378,167,1.319,189,2.029,206,2.458,208,2.152,251,1.319,261,3.896,262,2.844,263,3.746,264,2.152,265,1.963,266,1.963,270,3.143,276,2.378,278,2.378,279,2.378,280,2.272,285,1.963,290,2.152,298,2.662,299,3.042,329,3.143,330,3.042,331,3.618,332,3.618,333,4.783,334,3.618,335,3.618,336,3.618,337,3.618]],["title/injectables/RedisHelperService.html",[56,0.558,338,1.787]],["body/injectables/RedisHelperService.html",[3,0.201,4,0.235,5,0.235,7,0.271,8,1.323,10,1.048,11,0.029,12,0.87,14,1.502,15,1.063,16,0.597,17,0.666,20,0.271,21,0.043,25,0.778,27,0.019,28,0.019,56,0.766,57,1.413,65,2.19,66,0.702,67,1.74,69,3.536,76,1.532,77,1.229,78,0.597,79,1.532,81,2.87,85,2.801,87,1.128,89,1.982,90,1.659,91,3.279,92,3.056,155,1.738,176,1.982,338,2.456,339,4.056,340,5.14,341,4.526,342,4.526,343,3.332,344,5.202,345,2.451,346,4.526,347,5.946,348,3.332,349,3.332,350,5.14,351,4.526,352,2.451,353,3.332,354,3.332,355,3.332]],["title/classes/RegisterUserDto.html",[21,0.043,356,1.958]],["body/classes/RegisterUserDto.html",[3,0.214,4,0.251,5,0.251,7,0.29,10,1.854,11,0.029,12,0.998,15,1.087,16,0.413,20,0.29,21,0.061,27,0.02,28,0.02,66,0.734,78,0.684,83,1.936,119,3.449,125,1.77,185,1.798,186,2.644,309,3.158,356,2.811,357,5.093,358,2.989,359,3.491,360,4.335,361,3.555,362,4.465,363,3.555,364,3.555,365,3.974,366,3.478,367,3.555,368,3.555,369,4.457,370,2.989,371,2.337]],["title/interfaces/Request.html",[169,1.2,206,1.511]],["body/interfaces/Request.html",[0,1.384,3,0.182,4,0.213,5,0.213,7,0.246,11,0.029,15,0.716,16,0.688,17,0.603,20,0.344,21,0.039,25,0.987,27,0.018,28,0.018,29,1.185,56,0.716,66,0.656,67,1.431,78,0.35,87,1.431,90,1.502,99,1.939,103,1.502,104,2.104,107,1.384,109,1.939,110,1.384,111,2.028,122,1.637,130,1.637,155,0.882,167,1.541,169,1.541,171,1.794,173,2.293,185,1.431,189,1.28,194,2.242,206,2.553,208,1.794,227,2.9,233,2.513,239,1.794,242,1.502,246,2.293,249,1.66,251,1.541,258,3.143,259,1.983,260,1.939,261,3.206,262,2.513,263,3.474,264,1.794,265,1.637,266,1.637,267,2.219,268,2.219,269,1.637,270,1.983,271,2.219,272,1.983,273,1.983,274,2.778,275,3.109,276,1.983,277,2.219,278,1.983,279,1.983,280,2.069,281,3.588,282,2.219,283,2.219,284,3.109,285,2.293,286,1.794,287,2.219,288,1.794,289,2.219,290,1.794,291,2.219,292,2.219,293,2.219,294,2.219,295,1.794,296,1.983]],["title/entities/Role.html",[315,1.397,372,1.958]],["body/entities/Role.html",[3,0.243,4,0.284,5,0.284,7,0.328,10,1.773,11,0.029,12,0.955,15,0.868,16,0.595,20,0.328,21,0.052,27,0.022,28,0.022,66,0.795,77,1.664,78,0.655,155,1.498,249,1.581,251,2.055,260,2.724,308,3.059,315,2.174,316,2.393,318,2.96,319,3.77,320,3.77,324,4.148,326,3.77,327,2.393,328,2.96,372,3.047,373,3.383,374,4.024,375,4.024,376,3.383,377,5.124,378,4.024,379,4.308,380,4.308,381,4.024]],["title/modules/SharedModule.html",[29,1.294,41,1.787]],["body/modules/SharedModule.html",[3,0.184,4,0.216,5,0.216,11,0.029,16,0.715,17,0.611,20,0.249,21,0.039,25,0.714,27,0.018,28,0.018,29,1.93,31,1.658,32,1.658,33,2.008,34,2.008,35,1.658,36,3.493,37,3.228,41,3.476,43,2.802,44,2.008,45,2.008,47,2.248,55,2.008,63,3.45,83,1.554,87,1.034,173,2.664,176,2.535,196,2.248,224,3.45,226,2.92,241,1.817,242,1.521,253,2.568,255,2.568,280,1.296,338,3.45,382,2.568,383,2.568,384,2.568,385,3.055,386,3.055,387,3.055,388,2.248,389,3.055,390,3.055,391,3.613,392,3.055,393,3.613,394,3.055,395,3.055,396,3.613,397,3.055,398,3.055,399,3.055,400,3.055,401,3.055,402,3.055,403,3.055,404,3.055,405,5.79]],["title/injectables/TimeoutInterceptor.html",[56,0.558,406,2.164]],["body/injectables/TimeoutInterceptor.html",[3,0.225,4,0.264,5,0.264,7,0.305,8,1.429,10,1.177,11,0.029,12,0.828,14,1.093,16,0.632,17,0.747,20,0.305,21,0.048,25,1.272,27,0.021,28,0.021,56,0.828,57,1.587,66,0.759,67,1.843,76,1.266,77,1.015,78,0.568,79,1.266,87,1.266,97,3.596,98,3.596,99,2.65,100,4.006,101,4.248,103,1.863,104,2.711,105,3.596,107,1.717,110,1.717,113,2.752,167,1.364,177,2.752,226,3.654,237,3.596,241,2.225,406,3.213,407,4.578,408,3.145,409,3.741,410,3.741,411,4.888,412,4.888,413,3.741,414,5.445,415,3.741,416,3.145,417,3.741,418,4.888,419,3.741,420,3.741]],["title/classes/UpdatePasswordDto.html",[21,0.043,421,1.958]],["body/classes/UpdatePasswordDto.html",[3,0.235,4,0.276,5,0.276,7,0.318,10,1.748,11,0.029,12,0.941,15,1.053,16,0.453,20,0.318,21,0.065,27,0.021,28,0.021,66,0.78,78,0.645,83,2.026,119,3.431,125,1.944,186,2.767,359,3.653,360,4.089,362,4.672,365,4.225,366,3.697,369,4.317,370,3.282,371,2.566,421,2.988,422,4.933,423,3.282,424,3.904,425,3.904,426,3.904]],["title/entities/User.html",[194,1.397,315,1.397]],["body/entities/User.html",[3,0.159,4,0.187,5,0.187,7,0.215,10,1.947,11,0.029,12,1.048,15,1.048,16,0.446,20,0.215,21,0.034,27,0.016,28,0.016,66,0.596,77,1.229,78,0.719,80,2.282,83,1.651,155,1.123,185,1.533,186,2.255,189,2.109,194,1.629,249,1.779,280,2.109,308,2.457,309,2.693,310,2.976,311,2.976,312,2.976,313,2.693,314,2.976,315,1.629,316,1.569,318,2.826,319,2.826,320,4.503,322,2.826,324,3.331,326,4.375,327,1.569,328,4.445,372,2.957,376,2.219,379,3.229,380,3.229,427,2.219,428,4.528,429,5.285,430,4.973,431,2.639,432,4.973,433,4.528,434,2.639,435,4.903,436,2.639,437,2.639,438,3.269,439,2.639,440,2.639,441,2.639,442,3.841,443,2.639,444,2.639,445,2.639,446,3.841,447,2.639,448,4.528,449,2.639,450,2.639,451,2.639,452,2.219]],["title/controllers/UserController.html",[0,1.511,453,2.164]],["body/controllers/UserController.html",[0,0.728,2,0.944,3,0.156,4,0.112,5,0.112,7,0.129,8,0.757,10,1.65,11,0.029,12,0.864,14,1.533,15,0.864,16,0.636,17,0.317,20,0.129,21,0.02,22,1.335,23,1.168,24,3.353,25,1.191,27,0.011,28,0.011,55,1.043,67,1.283,69,3.668,76,1.669,77,1.338,78,0.573,79,1.669,80,0.728,81,0.79,83,1.523,87,0.537,91,0.944,92,2.665,108,0.79,111,1.723,122,0.861,130,0.861,148,1.043,149,1.043,155,1.31,158,2.158,167,1.523,186,2.08,202,2.416,224,1.782,226,1.953,227,1.953,233,3.259,234,3.073,237,1.168,239,0.944,241,0.944,242,0.79,246,2.431,247,1.335,248,1.335,262,1.953,280,0.673,285,2.056,286,0.944,295,0.944,296,1.043,302,1.168,303,3.478,313,2.484,315,0.673,345,3.627,356,2.665,396,1.168,421,2.932,438,1.703,453,1.703,454,1.335,455,2.592,456,2.592,457,3.186,458,2.179,459,2.179,460,2.179,461,2.761,462,2.179,463,1.588,464,2.811,465,2.592,466,1.588,467,4.288,468,3.511,469,1.588,470,1.588,471,1.588,472,2.592,473,3.284,474,1.588,475,1.588,476,2.592,477,1.588,478,1.588,479,2.592,480,1.588,481,1.335,482,2.592,483,3.284,484,1.588,485,1.335,486,2.592,487,3.284,488,1.588,489,1.335,490,2.592,491,2.592,492,1.588,493,1.588,494,1.335,495,1.588,496,1.588,497,2.592,498,2.592,499,1.588,500,2.592,501,1.335,502,1.335,503,1.335,504,1.335,505,1.335,506,1.335,507,1.335,508,1.782,509,1.335,510,1.588,511,2.416,512,1.588,513,1.168,514,1.168,515,1.588,516,1.588,517,1.168,518,1.588,519,1.588,520,1.588,521,2.592,522,1.588,523,1.588,524,1.588,525,1.588,526,1.588,527,1.588,528,1.335,529,1.588,530,1.588,531,1.588,532,3.284,533,3.284,534,3.284,535,3.284,536,1.588,537,1.588,538,1.588,539,1.588,540,1.588,541,1.588,542,1.588,543,1.588,544,2.592,545,2.592,546,1.335,547,1.588,548,1.335,549,1.588,550,1.588,551,1.588,552,3.284,553,1.588,554,1.588,555,2.592,556,1.588,557,1.588,558,1.588,559,1.588,560,1.588]],["title/interfaces/UserInfo.html",[169,1.2,304,2.164]],["body/interfaces/UserInfo.html",[3,0.219,4,0.257,5,0.257,7,0.296,11,0.028,15,1.147,20,0.296,21,0.047,27,0.02,28,0.02,66,0.745,78,0.755,83,2.082,155,1.782,169,1.326,171,2.162,185,1.933,189,2.586,231,1.973,243,2.39,249,2.244,251,2.082,301,2.675,302,2.675,303,2.675,304,3.754,308,3.098,309,3.396,310,3.754,311,3.754,312,3.754,313,3.396,314,3.754]],["title/classes/UserLoginDto.html",[21,0.043,464,1.958]],["body/classes/UserLoginDto.html",[3,0.264,4,0.31,5,0.31,7,0.357,10,1.7,11,0.029,12,0.915,15,1.036,16,0.509,20,0.357,21,0.07,27,0.023,28,0.023,66,0.839,78,0.628,119,2.932,125,2.181,185,1.984,186,2.918,360,3.976,369,4.312,371,2.879,464,3.214,561,4.927,562,3.683,563,4.381,564,4.381]],["title/modules/UserModule.html",[29,1.294,42,1.958]],["body/modules/UserModule.html",[2,3.091,3,0.248,4,0.291,5,0.291,11,0.029,16,0.717,17,0.823,20,0.335,21,0.053,27,0.022,28,0.022,29,2.239,31,2.233,32,2.233,33,2.706,34,2.706,35,2.233,36,3.745,37,2.706,41,3.42,42,3.85,43,3.417,44,2.706,45,2.706,47,3.824,453,3.745,508,3.42,509,3.461,565,3.461,566,4.117,567,3.461,568,4.117,569,4.117,570,4.117,571,3.824,572,4.117]],["title/injectables/UserService.html",[56,0.558,508,1.787]],["body/injectables/UserService.html",[3,0.073,4,0.085,5,0.085,7,0.098,8,0.603,10,1.128,11,0.029,12,0.871,14,1.432,15,0.661,16,0.609,17,0.242,20,0.098,21,0.016,25,1.144,27,0.009,28,0.009,55,0.795,56,0.35,57,0.513,63,2.119,64,0.889,66,0.32,67,1.882,69,3.409,76,1.322,77,1.06,78,0.569,79,1.322,80,1.239,81,1.345,82,1.227,83,1.603,87,0.409,89,0.719,90,0.602,91,2.728,92,3.172,111,2.002,115,2.323,121,1.016,130,1.732,132,3.996,155,1.141,167,2.07,185,1.081,189,1.145,194,1.946,202,2.873,231,1.465,234,2.349,244,1.016,246,2.119,249,1.409,251,0.752,260,1.239,280,0.513,285,2.489,286,1.899,288,1.227,295,2.323,308,2.385,309,1.227,310,1.357,311,1.357,312,1.357,313,2.989,314,1.357,315,0.513,327,0.719,338,2.119,339,0.889,345,3.069,356,1.899,359,2.567,372,1.606,396,1.518,421,2.614,438,2.099,457,2.684,458,1.735,459,1.735,460,1.735,461,1.735,462,1.735,464,1.899,468,1.735,481,1.735,485,1.735,489,1.735,494,1.735,501,1.016,502,1.016,503,1.016,504,1.016,505,1.016,506,1.016,507,1.016,508,1.732,546,1.735,573,1.016,574,2.701,575,2.701,576,2.701,577,2.064,578,2.064,579,1.209,580,1.209,581,2.064,582,1.209,583,2.064,584,1.209,585,1.209,586,1.209,587,1.209,588,2.064,589,1.209,590,1.209,591,3.507,592,2.064,593,1.209,594,2.064,595,1.209,596,2.064,597,1.209,598,2.064,599,1.209,600,1.209,601,1.209,602,1.209,603,1.209,604,1.209,605,1.209,606,1.209,607,0.889,608,1.209,609,1.987,610,0.889,611,0.889,612,1.209,613,1.209,614,0.889,615,2.064,616,1.209,617,4.171,618,1.209,619,2.064,620,2.064,621,2.064,622,2.701,623,2.701,624,1.209,625,2.701,626,1.209,627,2.701,628,1.209,629,2.064,630,2.064,631,2.064,632,1.016,633,2.064,634,2.064,635,2.064,636,2.064,637,1.209,638,1.209,639,1.209,640,1.209,641,1.209,642,1.209,643,2.064,644,1.209,645,1.209,646,1.209,647,1.209,648,2.064,649,1.209,650,1.209,651,1.209,652,1.209,653,1.209,654,1.209,655,2.064,656,1.209,657,2.701,658,1.209,659,2.701,660,1.209,661,2.064,662,1.209,663,2.701,664,1.209,665,2.064,666,1.209,667,1.209,668,1.209,669,1.209,670,1.209,671,1.209,672,1.209,673,1.209,674,2.064,675,1.209,676,2.701,677,2.064,678,1.209,679,2.064,680,2.064,681,2.064,682,2.064,683,2.064,684,2.064,685,2.064,686,2.064,687,2.064,688,2.064,689,2.064,690,2.064,691,2.064,692,2.064,693,2.064,694,1.209,695,1.209,696,1.209,697,1.209]],["title/coverage.html",[698,3.303]],["body/coverage.html",[0,1.594,1,1.515,3,0.139,5,0.163,6,1.937,11,0.029,18,1.25,21,0.068,27,0.015,28,0.015,35,1.25,50,1.695,52,1.695,56,0.95,58,1.937,63,1.25,64,1.695,65,2.748,78,0.268,88,1.695,89,2.486,94,1.515,95,1.937,96,1.937,108,1.73,124,1.695,126,1.937,127,1.937,128,1.937,148,1.515,149,2.283,150,2.555,158,1.515,163,4.418,167,0.84,169,1.697,170,1.515,172,1.937,179,1.695,181,1.695,183,1.695,194,0.977,199,1.515,200,1.937,201,1.937,206,1.057,224,1.25,225,1.937,231,1.25,243,2.283,258,1.37,259,2.748,260,1.057,265,1.25,266,1.25,269,1.25,297,2.555,301,2.555,304,1.515,315,1.773,317,1.937,322,3.674,329,1.515,330,1.937,338,1.25,339,1.695,352,1.695,356,1.37,357,1.937,358,1.937,372,1.37,373,1.937,388,1.695,391,1.695,393,1.695,406,1.515,407,1.937,408,1.937,421,1.37,422,1.937,423,1.937,427,1.937,435,3.514,453,1.515,454,1.937,464,1.37,508,1.25,511,1.695,513,1.695,514,1.695,517,1.695,561,1.937,562,1.937,571,1.695,573,1.937,607,1.695,609,1.695,610,1.695,611,1.695,614,1.695,698,1.695,699,2.304,700,2.304,701,2.304,702,2.304,703,4.654,704,3.913,705,6.552,706,6.534,707,1.937,708,2.304,709,3.474,710,4.181,711,4.654,712,2.304,713,2.304,714,1.937,715,1.937,716,2.304,717,3.913,718,1.937,719,4.994,720,2.304,721,1.937,722,1.937,723,2.304,724,2.92,725,2.92,726,1.937,727,2.92,728,1.937,729,1.937,730,2.304,731,1.937,732,1.937,733,1.937,734,1.937,735,2.304,736,2.304,737,2.304,738,2.304,739,2.304,740,2.92,741,1.937,742,2.92,743,1.937,744,1.937,745,1.937,746,2.304,747,2.304]],["title/dependencies.html",[32,2.148,748,2.314]],["body/dependencies.html",[11,0.029,17,0.857,21,0.069,27,0.023,28,0.023,32,2.327,86,3.605,107,1.968,109,1.968,176,2.551,193,3.155,241,2.551,242,2.136,264,2.551,274,2.819,327,2.551,371,2.819,749,4.289,750,4.289,751,6.074,752,4.289,753,4.289,754,4.289,755,4.289,756,4.289,757,4.289,758,4.289,759,4.289,760,4.289,761,4.289,762,4.289,763,4.289,764,4.289,765,4.289,766,3.605,767,4.289,768,4.289,769,4.289,770,4.289,771,4.289,772,4.289,773,4.289,774,4.289]],["title/miscellaneous/functions.html",[775,1.809,776,3.328]],["body/miscellaneous/functions.html",[7,0.42,11,0.025,27,0.025,28,0.025,35,3.407,707,4.331,775,3.386,776,4.331,777,5.152]],["title/index.html",[7,0.224,778,2.752,779,2.752]],["body/index.html",[4,0.277,11,0.028,27,0.021,28,0.021,60,3.3,61,3.3,82,2.334,591,3.3,698,2.888,780,3.925,781,3.925,782,5.043,783,3.925,784,3.925,785,3.925,786,3.3,787,3.925,788,3.925,789,5.572,790,3.925,791,3.925,792,3.925,793,5.572,794,6.331,795,3.925,796,3.3,797,6.225,798,3.925,799,5.043,800,3.925,801,3.3,802,3.925,803,3.925,804,5.043,805,5.043,806,3.925,807,3.925,808,3.925,809,5.043,810,5.043,811,3.925,812,3.925,813,3.925,814,3.925,815,3.925,816,3.3,817,3.925,818,3.925,819,3.925,820,3.925,821,3.925,822,3.925,823,3.925,824,3.925,825,3.925,826,3.925,827,3.3,828,3.925,829,3.925,830,3.925,831,3.925,832,3.925,833,3.925,834,3.3]],["title/modules.html",[31,2.436]],["body/modules.html",[11,0.025,27,0.025,28,0.025,30,3.292,31,2.717,41,2.717,42,2.978,816,5.218,835,6.207,836,6.207,837,6.207]],["title/overview.html",[838,3.774]],["body/overview.html",[2,2.303,11,0.028,18,3.004,27,0.021,28,0.021,29,1.521,30,4.204,31,2.101,32,2.101,33,2.545,34,2.545,35,2.101,36,2.545,37,2.545,38,3.255,39,3.255,40,3.255,41,3.599,42,3.753,43,3.286,44,2.545,45,2.545,57,1.642,63,3.424,125,1.928,171,2.303,224,3.424,298,2.849,316,2.303,338,3.424,366,2.849,382,3.255,383,3.255,384,3.255,508,3.004,565,3.255,567,3.255,838,3.255,839,4.999,840,4.999,841,3.255,842,3.872]],["title/properties.html",[66,0.614,748,2.314]],["body/properties.html",[11,0.028,27,0.025,28,0.025,66,0.791,82,3.031,827,4.285,834,4.285,843,5.097,844,5.097,845,5.097]],["title/miscellaneous/variables.html",[775,1.809,846,3.328]],["body/miscellaneous/variables.html",[3,0.211,7,0.114,11,0.029,15,0.824,24,1.533,25,1.204,27,0.01,28,0.01,50,1.716,52,1.716,68,1.961,69,2.504,78,0.625,80,2.814,81,3.054,83,1.421,87,1.426,88,2.209,89,0.831,92,2.318,94,0.918,99,0.641,108,1.161,111,1.535,133,3.287,138,1.175,149,0.918,150,1.716,155,0.408,156,1.175,158,1.533,163,0.918,167,0.85,170,1.533,173,1.265,174,3.276,175,4.089,176,2.085,177,1.716,179,1.716,181,1.716,183,1.716,185,1.016,186,1.495,187,2.947,188,2.524,190,2.524,191,2.524,192,2.524,193,1.716,194,1.487,195,2.524,196,1.716,197,1.961,198,1.961,199,0.918,206,1.07,226,2.985,249,0.916,251,1.421,265,1.265,266,0.758,269,0.758,272,1.533,273,1.973,280,1.895,288,0.831,290,1.387,316,0.831,329,0.918,344,2.947,352,1.716,359,0.918,388,2.209,391,1.716,393,1.716,406,0.918,416,1.961,438,1.533,452,1.961,467,1.961,511,1.716,513,1.716,514,1.028,517,1.716,528,1.175,548,1.175,571,1.716,607,1.716,609,1.716,610,1.716,611,1.716,614,1.716,632,1.175,704,3.54,714,1.175,715,1.175,717,1.175,718,2.524,721,1.175,722,1.175,724,1.175,725,2.524,726,2.947,727,1.175,728,1.961,729,1.961,731,1.175,732,1.175,733,1.175,734,1.175,740,1.175,741,2.524,742,1.175,743,2.524,744,1.175,745,1.961,766,1.175,775,0.918,786,1.175,796,1.175,801,1.175,841,1.175,846,1.175,847,2.332,848,3.505,849,2.332,850,3.002,851,1.397,852,1.397,853,1.397,854,1.397,855,1.397,856,1.397,857,1.397,858,1.397,859,2.332,860,2.332,861,1.397,862,1.397,863,1.397,864,1.397,865,2.332,866,1.397,867,3.002,868,1.397,869,1.397,870,1.397,871,1.397,872,1.397,873,1.397,874,3.002,875,2.332,876,2.332,877,1.397,878,2.332,879,2.332,880,2.332,881,2.332,882,5.155,883,3.505,884,4.211,885,1.397,886,1.397,887,1.397,888,1.397,889,1.397,890,1.397,891,1.397,892,1.397,893,1.397,894,1.397,895,1.397,896,1.397,897,1.397,898,2.332,899,1.397,900,1.397,901,1.397,902,2.332,903,1.397,904,1.397,905,1.397,906,1.397,907,1.397,908,1.397,909,1.397,910,1.397,911,1.397,912,1.397,913,1.397,914,1.397,915,2.332,916,2.332,917,2.332,918,2.332,919,2.332,920,2.332,921,2.332,922,2.332,923,2.332,924,2.332,925,2.332,926,2.332,927,2.332,928,2.332,929,1.397,930,1.397,931,1.397,932,1.397,933,2.332,934,3.897,935,3.002,936,2.332,937,1.397,938,1.397,939,1.397,940,1.397,941,1.397,942,1.397,943,1.397,944,1.397,945,1.397,946,1.397,947,1.397,948,1.397,949,1.397,950,1.397,951,1.397,952,1.397,953,1.397,954,1.397,955,1.397,956,1.397,957,3.002,958,1.397,959,1.397,960,1.397,961,1.397,962,1.397]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":163,"title":{},"body":{"classes/HttpResponseEntity.html":{},"guards/PermissionGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":844,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":288,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["1.1.25",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":416,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":322,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{},"coverage.html":{}}}],["132a4fds42",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15235309829@163.com",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["17777777711",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["2",{"_index":840,"title":{},"body":{"overview.html":{}}}],["2/4",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":319,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["3",{"_index":839,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["30m",{"_index":255,"title":{},"body":{"injectables/JWTHelperService.html":{},"modules/SharedModule.html":{}}}],["33",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":842,"title":{},"body":{"overview.html":{}}}],["4.6.10",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":284,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["5",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["50",{"_index":435,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["587",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":366,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"overview.html":{}}}],["6.4.10",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["6.9.5",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["7.0.3",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["7d",{"_index":257,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["8",{"_index":841,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["9/10",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["__",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dev__",{"_index":179,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["__prod__",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":544,"title":{},"body":{"controllers/UserController.html":{}}}],["accesstoken",{"_index":302,"title":{},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{}}}],["accesstokenexpirestime",{"_index":197,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["addtag('test",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["admin/update",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin",{"_index":455,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(@body",{"_index":538,"title":{},"body":{"controllers/UserController.html":{}}}],["adminlogin(userloginparams",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["agent",{"_index":211,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["amazing",{"_index":817,"title":{},"body":{"index.html":{}}}],["api",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":60,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_interceptor",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appdatasource",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appdatasource.getrepository(permission",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appdatasource.getrepository(role",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appdatasource.getrepository(user",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":788,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":134,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arr",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["arr.indexof(permission",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["arr.push(permission",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["array",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":69,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/RedisHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":827,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":281,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["authorization.split",{"_index":287,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["avatar",{"_index":310,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["await",{"_index":92,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/RedisHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":818,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["base",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":837,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":835,"title":{},"body":{"modules.html":{}}}],["build",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":783,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":101,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["canactivate",{"_index":261,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["canactivate(context",{"_index":299,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}}}],["captcha",{"_index":359,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["captcha/send",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["captchacacheprefix",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":130,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":131,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catcherror",{"_index":413,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":417,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["class",{"_index":21,"title":{"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":125,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["client",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["client.connect",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":382,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":384,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":383,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":565,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":566,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":567,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":115,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"entities/Permission.html":{},"injectables/UserService.html":{}}}],["column",{"_index":326,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({comment",{"_index":429,"title":{},"body":{"entities/User.html":{}}}],["column({length",{"_index":318,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({name",{"_index":441,"title":{},"body":{"entities/User.html":{}}}],["comment",{"_index":320,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["compodoc/compodoc",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/module",{"_index":389,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule",{"_index":387,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmodule.forroot(configmoduleoptions",{"_index":399,"title":{},"body":{"modules/SharedModule.html":{}}}],["configmoduleoptions",{"_index":388,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":226,"title":{},"body":{"injectables/JWTHelperService.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('email.pass",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('email.user",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('jwt.secret",{"_index":403,"title":{},"body":{"modules/SharedModule.html":{}}}],["configservice.get('mysql.database",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.host",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.logging",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.password",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.poolsize",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.port",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.synchronize",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('mysql.username",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis.port",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('redis.user",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.development",{"_index":182,"title":{},"body":{"interfaces/IConfig.html":{}}}],["configuration.production",{"_index":184,"title":{},"body":{"interfaces/IConfig.html":{}}}],["connectorpackage",{"_index":192,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["console.log",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(err",{"_index":420,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["const",{"_index":111,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor",{"_index":153,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["constructor(code",{"_index":154,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["contents",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":103,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{}}}],["context.getclass",{"_index":278,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.getclass().name",{"_index":215,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.gethandler",{"_index":279,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.gethandler().name",{"_index":216,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":208,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.switchtohttp().getresponse",{"_index":112,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(usermodulepaths.base",{"_index":519,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":698,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":152,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["create(data",{"_index":161,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["createclient",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdatecolumn",{"_index":433,"title":{},"body":{"entities/User.html":{}}}],["createparamdecorator",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtime",{"_index":314,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["createtransport",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["crypto.createhash('md5",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":138,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":140,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curpermission",{"_index":336,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["data",{"_index":122,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpResponseEntity.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["data.permissions",{"_index":294,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.roles",{"_index":293,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.userid",{"_index":291,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data.username",{"_index":292,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["data/init",{"_index":473,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":187,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["databaseprovidername",{"_index":352,"title":{},"body":{"injectables/RedisHelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseprovidername.mysql_data_source",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseprovidername.redis_data_source",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseproviders",{"_index":393,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(config",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":432,"title":{},"body":{"entities/User.html":{}}}],["date.now",{"_index":219,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":268,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["decorator",{"_index":515,"title":{},"body":{"controllers/UserController.html":{}}}],["decorator.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/EmailHelperService.html":{},"injectables/JWTHelperService.html":{},"entities/Permission.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["default",{"_index":80,"title":{},"body":{"injectables/EmailHelperService.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":552,"title":{},"body":{"controllers/UserController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":82,"title":{},"body":{"injectables/EmailHelperService.html":{},"entities/Permission.html":{},"injectables/UserService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":796,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ds",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ds.initialize",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto",{"_index":501,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/register",{"_index":504,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update",{"_index":506,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/user",{"_index":502,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":295,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e.stack",{"_index":547,"title":{},"body":{"controllers/UserController.html":{}}}],["e2e",{"_index":806,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":784,"title":{},"body":{"index.html":{}}}],["email",{"_index":83,"title":{},"body":{"injectables/EmailHelperService.html":{},"interfaces/IConfig.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"modules/SharedModule.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["email_client",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailhelperservice",{"_index":63,"title":{"injectables/EmailHelperService.html":{}},"body":{"injectables/EmailHelperService.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["emailprovidername",{"_index":88,"title":{},"body":{"injectables/EmailHelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailproviders",{"_index":391,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":316,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/permission.entity",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/role.entity",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/user.entity",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["entity",{"_index":315,"title":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["entity.ts",{"_index":150,"title":{},"body":{"classes/HttpResponseEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entity.ts:16",{"_index":162,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["entity.ts:4",{"_index":159,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["entity.ts:6",{"_index":160,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["entity.ts:8",{"_index":157,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["env",{"_index":766,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["envfilepath",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":418,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["example",{"_index":793,"title":{},"body":{"index.html":{}}}],["exception",{"_index":136,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":128,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":135,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":144,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":142,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message",{"_index":147,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception/http",{"_index":127,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exceptionfilter",{"_index":129,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":99,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":253,"title":{},"body":{"injectables/JWTHelperService.html":{},"modules/SharedModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":109,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["false",{"_index":438,"title":{},"body":{"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["finduserbyid",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["finduserbyid(userid",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["formatresponseinterceptor",{"_index":94,"title":{"injectables/FormatResponseInterceptor.html":{}},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":337,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["framework",{"_index":782,"title":{},"body":{"index.html":{}}}],["function",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":776,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genaccesstoken",{"_index":228,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["genaccesstoken(uservo",{"_index":230,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["gencaptchacode",{"_index":609,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gendevelopmentconfig",{"_index":181,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["genproductionconfig",{"_index":183,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["genrefreshtoken",{"_index":229,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["genrefreshtoken(uservo",{"_index":235,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["get('refresh",{"_index":476,"title":{},"body":{"controllers/UserController.html":{}}}],["get('register",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["get('test",{"_index":472,"title":{},"body":{"controllers/UserController.html":{}}}],["get(key",{"_index":342,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["getcaptchacachekey",{"_index":610,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcaptchacachekey(email",{"_index":632,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["getcaptchacachekey(registeruserparams.email",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["getcaptchacachekeyofupdatepwd",{"_index":611,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcaptchacachekeyofupdatepwd(email",{"_index":697,"title":{},"body":{"injectables/UserService.html":{}}}],["getcaptchacachekeyofupdatepwd(updatepassworddto.email",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["getindex",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getloginuserinfo",{"_index":513,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getloginuserinfo('userid",{"_index":557,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":778,"title":{"index.html":{}},"body":{}}],["getuserinfo",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserinfo(@getloginuserinfo('userid",{"_index":550,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserinfo(userid",{"_index":469,"title":{},"body":{"controllers/UserController.html":{}}}],["global",{"_index":401,"title":{},"body":{"modules/SharedModule.html":{}}}],["grow",{"_index":813,"title":{},"body":{"index.html":{}}}],["guard",{"_index":297,"title":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}},"body":{"coverage.html":{}}}],["guardproviders",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["guards",{"_index":298,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"overview.html":{}}}],["handler",{"_index":271,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["hash",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash.digest('hex",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash.update(salt",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":282,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["helper",{"_index":405,"title":{},"body":{"modules/SharedModule.html":{}}}],["helper.service",{"_index":396,"title":{},"body":{"modules/SharedModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["helper.service.ts",{"_index":65,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/JWTHelperService.html":{},"injectables/RedisHelperService.html":{},"coverage.html":{}}}],["helper.service.ts:10",{"_index":240,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["helper.service.ts:13",{"_index":238,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["helper.service.ts:16",{"_index":343,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["helper.service.ts:17",{"_index":75,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["helper.service.ts:19",{"_index":232,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["helper.service.ts:26",{"_index":348,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["helper.service.ts:38",{"_index":236,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["helper.service.ts:9",{"_index":85,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/RedisHelperService.html":{}}}],["here",{"_index":824,"title":{},"body":{"index.html":{}}}],["host",{"_index":133,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":139,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":72,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["http_success_code",{"_index":158,"title":{},"body":{"classes/HttpResponseEntity.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpexception",{"_index":132,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/UserService.html":{}}}],["httpexceptionfilter",{"_index":124,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpresponseentity",{"_index":148,"title":{"classes/HttpResponseEntity.html":{}},"body":{"classes/HttpResponseEntity.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["httpresponseentity.create",{"_index":536,"title":{},"body":{"controllers/UserController.html":{}}}],["httpresponseentity.create(uservo",{"_index":554,"title":{},"body":{"controllers/UserController.html":{}}}],["https://nestjs.com",{"_index":831,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.internal_server_error",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["iconfig",{"_index":170,"title":{"interfaces/IConfig.html":{}},"body":{"interfaces/IConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":308,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":110,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inittestdata",{"_index":457,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":87,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(configservice",{"_index":237,"title":{},"body":{"injectables/JWTHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{}}}],["inject(databaseprovidername.redis_data_source",{"_index":351,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["inject(emailhelperservice",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(emailprovidername",{"_index":84,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["inject(jwthelperservice",{"_index":520,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(jwtservice",{"_index":239,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["inject(redishelperservice",{"_index":594,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(repositoryprovidenames.permission_repository",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(repositoryprovidenames.role_repository",{"_index":596,"title":{},"body":{"injectables/UserService.html":{}}}],["inject(repositoryprovidenames.user_repository",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":792,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":795,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":419,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["intercept",{"_index":97,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":98,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor.ts",{"_index":408,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:21",{"_index":410,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptor.ts:23",{"_index":409,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["interceptorproviders",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":169,"title":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"interfaces/Request.html":{},"interfaces/UserInfo.html":{}},"body":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"interfaces/Request.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["interfaces",{"_index":171,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"interfaces/Request.html":{},"interfaces/UserInfo.html":{},"overview.html":{}}}],["invoked",{"_index":217,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["invokerecordinterceptor",{"_index":199,"title":{"injectables/InvokeRecordInterceptor.html":{}},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ip",{"_index":212,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["isadmin",{"_index":313,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["isemail",{"_index":362,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["isfrozen",{"_index":312,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["isglobal",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":369,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":360,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{}}}],["item",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["item.code",{"_index":335,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["item.name",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["item.permissions.foreach((permission",{"_index":690,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":820,"title":{},"body":{"index.html":{}}}],["jointable",{"_index":379,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["json.stringify(res",{"_index":223,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["jwt",{"_index":173,"title":{},"body":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["jwthelperservice",{"_index":224,"title":{"injectables/JWTHelperService.html":{}},"body":{"injectables/JWTHelperService.html":{},"modules/SharedModule.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtmodule",{"_index":386,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.registerasync",{"_index":400,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtservice",{"_index":227,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["jwtuserdata",{"_index":258,"title":{"interfaces/JwtUserData.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["kamil",{"_index":828,"title":{},"body":{"index.html":{}}}],["key",{"_index":344,"title":{},"body":{"injectables/RedisHelperService.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":328,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["license",{"_index":834,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":810,"title":{},"body":{"index.html":{}}}],["literal",{"_index":178,"title":{},"body":{"interfaces/IConfig.html":{}}}],["load",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":202,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logger(invokerecordinterceptor.name",{"_index":204,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["logging",{"_index":188,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":273,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["login.dto",{"_index":503,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login.dto.ts",{"_index":562,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:12",{"_index":563,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:7",{"_index":564,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["loginguard",{"_index":269,"title":{"guards/LoginGuard.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginuservo",{"_index":231,"title":{"classes/LoginUserVo.html":{}},"body":{"injectables/JWTHelperService.html":{},"classes/LoginUserVo.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["manytomany",{"_index":380,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":376,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["map",{"_index":106,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["map((result",{"_index":114,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring().slice(2",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["md5",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["md5encrypt",{"_index":607,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["md5encrypt('1234567aa",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["md5encrypt('admin",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["md5encrypt(registeruserparams.password",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["md5encrypt(updatepassworddto.password",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["md5encrypt(userloginparams.password",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["message",{"_index":119,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{}}}],["metadata",{"_index":274,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["method",{"_index":213,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":370,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["minlength(6",{"_index":365,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["miscellaneous",{"_index":775,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":809,"title":{},"body":{"index.html":{}}}],["mode",{"_index":799,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/user/user.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":823,"title":{},"body":{"index.html":{}}}],["ms",{"_index":221,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["mysql",{"_index":174,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["mysql.connectorpackage",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":193,"title":{},"body":{"interfaces/IConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mysql_data_source",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":829,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["names",{"_index":90,"title":{},"body":{"injectables/EmailHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["names.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":272,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["need_login",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need_permissions",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["needlogin",{"_index":511,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["needpermissions",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":789,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":833,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":105,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":241,"title":{},"body":{"injectables/JWTHelperService.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":264,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":242,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":167,"title":{},"body":{"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":100,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe",{"_index":113,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nick_name",{"_index":442,"title":{},"body":{"entities/User.html":{}}}],["nickname",{"_index":309,"title":{},"body":{"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["node.js",{"_index":781,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":86,"title":{},"body":{"injectables/EmailHelperService.html":{},"dependencies.html":{}}}],["now",{"_index":218,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["null",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nullable",{"_index":430,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":155,"title":{},"body":{"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":156,"title":{},"body":{"classes/HttpResponseEntity.html":{},"miscellaneous/variables.html":{}}}],["object.freeze",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":104,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{}}}],["open",{"_index":811,"title":{},"body":{"index.html":{}}}],["optional",{"_index":79,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":390,"title":{},"body":{"modules/SharedModule.html":{}}}],["options.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["others",{"_index":516,"title":{},"body":{"controllers/UserController.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overridenames",{"_index":265,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["overridenames.need_login",{"_index":277,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["overridenames.need_permissions",{"_index":334,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["overview",{"_index":838,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":748,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page1",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["page2",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["param",{"_index":91,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/JWTHelperService.html":{},"injectables/RedisHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pass",{"_index":195,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["password",{"_index":186,"title":{},"body":{"interfaces/IConfig.html":{},"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["password'])@needlogin",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["password.dto",{"_index":507,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password.dto.ts",{"_index":423,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:10",{"_index":426,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["password.dto.ts:21",{"_index":425,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["password.dto.ts:26",{"_index":424,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["password/captcha",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":260,"title":{"entities/Permission.html":{}},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"entities/Permission.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["permission.entity",{"_index":381,"title":{},"body":{"entities/Role.html":{}}}],["permission1",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.code",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.description",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.code",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.description",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["permission_repository",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permissionguard",{"_index":329,"title":{"guards/PermissionGuard.html":{}},"body":{"guards/PermissionGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionrepository",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["permissions",{"_index":251,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["phonenumber",{"_index":311,"title":{},"body":{"classes/LoginUserVo.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["please",{"_index":821,"title":{},"body":{"index.html":{}}}],["pnpm",{"_index":794,"title":{},"body":{"index.html":{}}}],["poet",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["poolsize",{"_index":191,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":175,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":467,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["post('admin/login",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["post('update",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["post(['update",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["post(undefined.info)@needlogin",{"_index":470,"title":{},"body":{"controllers/UserController.html":{}}}],["post(undefined.login",{"_index":495,"title":{},"body":{"controllers/UserController.html":{}}}],["post(usermodulepaths.contents.info",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["post(usermodulepaths.contents.login",{"_index":529,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primarygeneratedcolumn",{"_index":324,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":67,"title":{},"body":{"injectables/EmailHelperService.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["process.env.email_pass",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.email_user",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_access_token_expires_time",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_refresh_token_expires_time",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_database",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_host",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_password",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_port",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.mysql_username",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_host",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.redis_port",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.timeout",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":801,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":780,"title":{},"body":{"index.html":{}}}],["project",{"_index":812,"title":{},"body":{"index.html":{}}}],["promise",{"_index":270,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"injectables/EmailHelperService.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers/database.providers",{"_index":394,"title":{},"body":{"modules/SharedModule.html":{}}}],["providers/email.providers",{"_index":392,"title":{},"body":{"modules/SharedModule.html":{}}}],["query",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["query('isadmin",{"_index":541,"title":{},"body":{"controllers/UserController.html":{}}}],["query('refreshtoken",{"_index":540,"title":{},"body":{"controllers/UserController.html":{}}}],["read",{"_index":822,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{}}}],["record.interceptor.ts",{"_index":201,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["record.interceptor.ts:13",{"_index":205,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["record.interceptor.ts:15",{"_index":203,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["redis",{"_index":176,"title":{},"body":{"interfaces/IConfig.html":{},"injectables/RedisHelperService.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["redis_data_source",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisclient",{"_index":340,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["redisclienttype",{"_index":350,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["redishelperservice",{"_index":338,"title":{"injectables/RedisHelperService.html":{}},"body":{"injectables/RedisHelperService.html":{},"modules/SharedModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["reflect",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":263,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["refresh_token",{"_index":545,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtoken",{"_index":303,"title":{},"body":{"classes/LoginUserVo.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{}}}],["refreshtoken(refreshtoken",{"_index":475,"title":{},"body":{"controllers/UserController.html":{}}}],["refreshtokenexpirestime",{"_index":198,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["register",{"_index":458,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body",{"_index":522,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserdto",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserparams",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserdto",{"_index":356,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registeruserparams",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserparams.captcha",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserparams.email",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserparams.nickname",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["registeruserparams.username",{"_index":621,"title":{},"body":{"injectables/UserService.html":{}}}],["relations",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":591,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["repositoryprovidenames",{"_index":614,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositoryprovidenames.permission_repository",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoryprovidenames.role_repository",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoryprovidenames.user_repository",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":206,"title":{"interfaces/Request.html":{}},"body":{"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization",{"_index":283,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["request.headers['user",{"_index":210,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["request.user",{"_index":290,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["request.user.permissions",{"_index":332,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["request.user[key",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requesttimeoutexception",{"_index":411,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["requiredpermissions",{"_index":333,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requirelogin",{"_index":275,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["res",{"_index":143,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res?.message?.join",{"_index":146,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":108,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.interceptor.ts",{"_index":96,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["response.interceptor.ts:12",{"_index":102,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["response.status(status).json",{"_index":145,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.statuscode",{"_index":118,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{}}}],["result.code",{"_index":116,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["result.data",{"_index":123,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["result.message",{"_index":120,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":372,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.entity",{"_index":451,"title":{},"body":{"entities/User.html":{}}}],["role1",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.name",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.permissions",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["role2",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.name",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.permissions",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["role_permissions",{"_index":377,"title":{},"body":{"entities/Role.html":{}}}],["role_repository",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rolerepository",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":249,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["roles.permissions",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["run",{"_index":797,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":107,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/InvokeRecordInterceptor.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["salt",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":785,"title":{},"body":{"index.html":{}}}],["secret",{"_index":196,"title":{},"body":{"interfaces/IConfig.html":{},"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["secure",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sendmail",{"_index":70,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["sendmail(email",{"_index":71,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["sendregistercaptcha",{"_index":459,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendregistercaptcha(@query('email",{"_index":524,"title":{},"body":{"controllers/UserController.html":{}}}],["sendregistercaptcha(email",{"_index":481,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendupdatepasswordcaptcha",{"_index":460,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sendupdatepasswordcaptcha(@body",{"_index":559,"title":{},"body":{"controllers/UserController.html":{}}}],["sendupdatepasswordcaptcha(email",{"_index":485,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["server",{"_index":786,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["services",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["services/email",{"_index":398,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/jwt",{"_index":395,"title":{},"body":{"modules/SharedModule.html":{}}}],["services/redis",{"_index":397,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":341,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["set(key",{"_index":346,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["setdescription('nest",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(overridenames.need_login",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(overridenames.need_permissions",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('nest",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shared/providers/guard.providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/providers/interceptor.providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services/jwt",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["shared/share.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":41,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":787,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":404,"title":{},"body":{"modules/SharedModule.html":{}}}],["smtp.qq.com",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["socket",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"modules/SharedModule.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":815,"title":{},"body":{"index.html":{}}}],["src/.../configuration.development.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configuration.production.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.providers.ts",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.utils.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../guard.decorator.ts",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../guard.providers.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interceptor.providers.ts",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../md5.utils.ts",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../module",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../override",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../provider",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.path.ts",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.providers.ts",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.utils.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constants/override",{"_index":266,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/constants/provider",{"_index":89,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/RedisHelperService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/user/dto/register",{"_index":357,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/update",{"_index":422,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user",{"_index":561,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/modules/user/entities/permission.entity",{"_index":267,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["src/modules/user/entities/permission.entity.ts",{"_index":317,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/modules/user/entities/permission.entity.ts:14",{"_index":321,"title":{},"body":{"entities/Permission.html":{}}}],["src/modules/user/entities/permission.entity.ts:20",{"_index":323,"title":{},"body":{"entities/Permission.html":{}}}],["src/modules/user/entities/permission.entity.ts:8",{"_index":325,"title":{},"body":{"entities/Permission.html":{}}}],["src/modules/user/entities/role.entity.ts",{"_index":373,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/modules/user/entities/role.entity.ts:16",{"_index":374,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/user/entities/role.entity.ts:22",{"_index":375,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/user/entities/role.entity.ts:28",{"_index":378,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/user/entities/user.entity.ts",{"_index":427,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/modules/user/entities/user.entity.ts:18",{"_index":437,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:24",{"_index":450,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:30",{"_index":444,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:37",{"_index":443,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:43",{"_index":436,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:50",{"_index":431,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:57",{"_index":445,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:63",{"_index":440,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:69",{"_index":439,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:72",{"_index":434,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:75",{"_index":449,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/entities/user.entity.ts:81",{"_index":447,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.controller.ts",{"_index":454,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:103",{"_index":466,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:121",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:148",{"_index":471,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:167",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:182",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:55",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:64",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:73",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:82",{"_index":496,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":568,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.path.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/user.providers.ts",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/user.service.ts",{"_index":573,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:102",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:125",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:174",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:221",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:259",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:290",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:40",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:43",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:46",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:49",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:52",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:55",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:62",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.utils.ts",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/vo/login",{"_index":243,"title":{},"body":{"injectables/JWTHelperService.html":{},"classes/LoginUserVo.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["src/shared/config/configuration.development.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/config/configuration.production.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/config/configuration.ts",{"_index":172,"title":{},"body":{"interfaces/IConfig.html":{},"coverage.html":{}}}],["src/shared/config/module",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/guard.decorator",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["src/shared/decorators/guard.decorator.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/user",{"_index":514,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filter/http",{"_index":126,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/guards/login.guard.ts",{"_index":259,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/shared/guards/login.guard.ts:37",{"_index":300,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/shared/guards/permission.guard.ts",{"_index":330,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["src/shared/guards/permission.guard.ts:19",{"_index":331,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/shared/http/http",{"_index":149,"title":{},"body":{"classes/HttpResponseEntity.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/interceptors/format",{"_index":95,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/invoke",{"_index":200,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/timeout",{"_index":407,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["src/shared/providers/database.providers.ts",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/providers/email.providers.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/providers/guard.providers.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/providers/interceptor.providers.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/services/email",{"_index":64,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/shared/services/jwt",{"_index":225,"title":{},"body":{"injectables/JWTHelperService.html":{},"coverage.html":{}}}],["src/shared/services/redis",{"_index":339,"title":{},"body":{"injectables/RedisHelperService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/shared/share.module",{"_index":569,"title":{},"body":{"modules/UserModule.html":{}}}],["src/shared/share.module.ts",{"_index":385,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/utils/env.utils.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/md5.utils",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/shared/utils/md5.utils.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":61,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["start:dev",{"_index":800,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":802,"title":{},"body":{"index.html":{}}}],["started",{"_index":779,"title":{"index.html":{}},"body":{}}],["starter",{"_index":791,"title":{},"body":{"index.html":{}}}],["statements",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":151,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["status",{"_index":141,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":825,"title":{},"body":{"index.html":{}}}],["str",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/EmailHelperService.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":73,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["success",{"_index":121,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":62,"title":{},"body":{"injectables/AppService.html":{}}}],["support",{"_index":816,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":836,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":190,"title":{},"body":{"interfaces/IConfig.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":207,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["tap((res",{"_index":220,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["test",{"_index":805,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":808,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":807,"title":{},"body":{"index.html":{}}}],["tests",{"_index":804,"title":{},"body":{"index.html":{}}}],["text",{"_index":74,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["thanks",{"_index":814,"title":{},"body":{"index.html":{}}}],["this(code",{"_index":168,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["this.appservice.getindex",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.code",{"_index":164,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["this.configservice.get('jwt.accesstokenexpirestime",{"_index":254,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["this.configservice.get('jwt.refreshtokenexpirestime",{"_index":256,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["this.data",{"_index":166,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["this.emailhelperservice.sendmail",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwthelperservice.genaccesstoken(uservo",{"_index":533,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwthelperservice.genrefreshtoken(uservo",{"_index":535,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.sign",{"_index":245,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":542,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.verify(token",{"_index":289,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.logger.debug",{"_index":214,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.logger.debug(`response",{"_index":222,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["this.logger.error(e",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logger.error(e.message",{"_index":546,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["this.message",{"_index":165,"title":{},"body":{"classes/HttpResponseEntity.html":{}}}],["this.permissionrepository.save([permission1",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redisclient.expire(key",{"_index":355,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["this.redisclient.get(key",{"_index":353,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["this.redisclient.set(key",{"_index":354,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["this.redishelperservice.get",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.redishelperservice.set",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["this.reflector.getallandoverride",{"_index":276,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["this.rolerepository.save([role1",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.transporter.sendmail",{"_index":93,"title":{},"body":{"injectables/EmailHelperService.html":{}}}],["this.userrepository.findone",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save([user1",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.finduserbyid(data.userid",{"_index":543,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.finduserbyid(userid",{"_index":551,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.inittestdata",{"_index":527,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruserdto",{"_index":523,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendregistercaptcha(email",{"_index":525,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.sendupdatepasswordcaptcha(email",{"_index":560,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.updatepassword(userid",{"_index":558,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userlogin",{"_index":539,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userlogin(userloginparams",{"_index":531,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":285,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["throwerror",{"_index":414,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout",{"_index":177,"title":{},"body":{"interfaces/IConfig.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["timeout(parseint(this.configservice.get('timeout",{"_index":415,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":412,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":406,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":233,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["touch",{"_index":826,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["transporter",{"_index":68,"title":{},"body":{"injectables/EmailHelperService.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":280,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"modules/SharedModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":286,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ttl",{"_index":347,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["twitter",{"_index":832,"title":{},"body":{"index.html":{}}}],["type",{"_index":78,"title":{},"body":{"injectables/EmailHelperService.html":{},"injectables/FormatResponseInterceptor.html":{},"classes/HttpExceptionFilter.html":{},"classes/HttpResponseEntity.html":{},"interfaces/IConfig.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"injectables/RedisHelperService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdatePasswordDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":327,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["types",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":790,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":262,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception('token",{"_index":296,"title":{},"body":{"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["undefined",{"_index":117,"title":{},"body":{"injectables/FormatResponseInterceptor.html":{}}}],["unit",{"_index":803,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":345,"title":{},"body":{"injectables/RedisHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":845,"title":{},"body":{"properties.html":{}}}],["update_password",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedatecolumn",{"_index":448,"title":{},"body":{"entities/User.html":{}}}],["updatepassword",{"_index":461,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassword(userid",{"_index":489,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatepassworddto",{"_index":421,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"classes/UpdatePasswordDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updatepassworddto.captcha",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["updatetime",{"_index":428,"title":{},"body":{"entities/User.html":{}}}],["useclass",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory(configservice",{"_index":402,"title":{},"body":{"modules/SharedModule.html":{}}}],["user",{"_index":194,"title":{"entities/User.html":{}},"body":{"interfaces/IConfig.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.avatar",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["user.controller",{"_index":570,"title":{},"body":{"modules/UserModule.html":{}}}],["user.createtime.gettime",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["user.dto",{"_index":505,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":358,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":364,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:20",{"_index":367,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:31",{"_index":363,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:36",{"_index":361,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:7",{"_index":368,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isadmin",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isfrozen",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["user.nickname",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["user.path",{"_index":518,"title":{},"body":{"controllers/UserController.html":{}}}],["user.phonenumber",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["user.providers",{"_index":572,"title":{},"body":{"modules/UserModule.html":{}}}],["user.roles.map((item",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles.reduce((arr",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":509,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["user.utils",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["user.vo",{"_index":244,"title":{},"body":{"injectables/JWTHelperService.html":{},"injectables/UserService.html":{}}}],["user.vo.ts",{"_index":301,"title":{},"body":{"classes/LoginUserVo.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["user.vo.ts:16",{"_index":307,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:17",{"_index":305,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user.vo.ts:18",{"_index":306,"title":{},"body":{"classes/LoginUserVo.html":{}}}],["user/admin/login",{"_index":537,"title":{},"body":{"controllers/UserController.html":{}}}],["user/admin/update",{"_index":556,"title":{},"body":{"controllers/UserController.html":{}}}],["user/info",{"_index":548,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["user/login",{"_index":528,"title":{},"body":{"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["user/register",{"_index":521,"title":{},"body":{"controllers/UserController.html":{}}}],["user/test",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["user/update",{"_index":555,"title":{},"body":{"controllers/UserController.html":{}}}],["user1",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.email",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.isadmin",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.nickname",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.password",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.phonenumber",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.roles",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.username",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["user2",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.email",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.nickname",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.password",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.roles",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.username",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["user_repository",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_roles",{"_index":446,"title":{},"body":{"entities/User.html":{}}}],["usera",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["useragent",{"_index":209,"title":{},"body":{"injectables/InvokeRecordInterceptor.html":{}}}],["usercontroller",{"_index":453,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":246,"title":{},"body":{"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userinfo",{"_index":304,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginUserVo.html":{},"interfaces/UserInfo.html":{},"coverage.html":{}}}],["userlogin",{"_index":462,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userlogin(@body",{"_index":530,"title":{},"body":{"controllers/UserController.html":{}}}],["userlogin(userloginparams",{"_index":494,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userlogindto",{"_index":464,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userloginparams",{"_index":468,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userloginparams.username",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":42,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermodulepaths",{"_index":517,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":185,"title":{},"body":{"interfaces/IConfig.html":{},"injectables/JWTHelperService.html":{},"interfaces/JwtUserData.html":{},"guards/LoginGuard.html":{},"classes/LoginUserVo.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/User.html":{},"interfaces/UserInfo.html":{},"classes/UserLoginDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usernamehasregister",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["userproviders",{"_index":571,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":452,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":508,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uservo",{"_index":234,"title":{},"body":{"injectables/JWTHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["uservo.accesstoken",{"_index":532,"title":{},"body":{"controllers/UserController.html":{}}}],["uservo.refreshtoken",{"_index":534,"title":{},"body":{"controllers/UserController.html":{}}}],["uservo.userinfo",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["uservo.userinfo.id",{"_index":247,"title":{},"body":{"injectables/JWTHelperService.html":{},"controllers/UserController.html":{}}}],["uservo.userinfo.permissions",{"_index":252,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["uservo.userinfo.phonenumber",{"_index":553,"title":{},"body":{"controllers/UserController.html":{}}}],["uservo.userinfo.roles",{"_index":250,"title":{},"body":{"injectables/JWTHelperService.html":{}}}],["uservo.userinfo.username",{"_index":248,"title":{},"body":{"injectables/JWTHelperService.html":{},"controllers/UserController.html":{}}}],["utils",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["utils/env.utils",{"_index":180,"title":{},"body":{"interfaces/IConfig.html":{}}}],["validator",{"_index":371,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdatePasswordDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":81,"title":{},"body":{"injectables/EmailHelperService.html":{},"classes/HttpResponseEntity.html":{},"injectables/InvokeRecordInterceptor.html":{},"injectables/RedisHelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":846,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":843,"title":{},"body":{"properties.html":{}}}],["vo",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["vo/login",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["void",{"_index":137,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["watch",{"_index":798,"title":{},"body":{"index.html":{}}}],["website",{"_index":830,"title":{},"body":{"index.html":{}}}],["yes",{"_index":349,"title":{},"body":{"injectables/RedisHelperService.html":{}}}],["you'd",{"_index":819,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getIndex\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIndex()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n                        GET 本地启动后欢迎页\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * GET 本地启动后欢迎页\n   * @path /\n   */\n  @Get()\n  getIndex(): string {\n    return this.appService.getIndex();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n// modules\nimport { SharedModule } from './shared/share.module';\nimport { UserModule } from './modules/user/user.module';\n// providers\nimport { GuardProviders } from './shared/providers/guard.providers';\nimport { InterceptorProviders } from './shared/providers/interceptor.providers';\n// controllers\nimport { AppController } from './app.controller';\n// services\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [\n    // 共享模块\n    SharedModule,\n    // 用户模块\n    UserModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // 全局守卫\n    ...GuardProviders,\n    // 全局拦截器\n    ...InterceptorProviders,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIndex\n                        \n                    \n                \n            \n            \n                \ngetIndex()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getIndex(): string {\n    return 'App Start Successfully !';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailHelperService.html":{"url":"injectables/EmailHelperService.html","title":"injectable - EmailHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/email-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(email: string, html: string, subject: string, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/email-helper.service.ts:17\n                        \n                    \n\n\n            \n                \n                        发送邮件\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    目标邮件\n\n                                            \n                                        \n                                        \n                                                html\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    邮件内容\n\n                                            \n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    邮件主题\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Transporter\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(EmailProviderName)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/services/email-helper.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Transporter } from 'nodemailer';\nimport { Inject, Injectable } from '@nestjs/common';\n\nimport { EmailProviderName } from 'src/constants/provider-names';\n\n@Injectable()\nexport class EmailHelperService {\n  @Inject(EmailProviderName)\n  private transporter: Transporter;\n\n  /**\n   * 发送邮件\n   * @param email 目标邮件\n   * @param html 邮件内容\n   * @param subject 邮件主题\n   */\n  async sendMail(\n    email: string,\n    html: string,\n    subject: string,\n    text: string = '',\n  ) {\n    await this.transporter.sendMail({\n      from: '会议预定系统 ',\n      to: email,\n      subject,\n      html,\n      text,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormatResponseInterceptor.html":{"url":"injectables/FormatResponseInterceptor.html","title":"injectable - FormatResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormatResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/format-response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/format-response.interceptor.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\nimport { Response } from 'express';\n\n@Injectable()\nexport class FormatResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const response = context.switchToHttp().getResponse();\n    return next.handle().pipe(\n      map((result) => {\n        return {\n          code: result.code !== undefined ? result.code : response.statusCode,\n          message: result.message !== undefined ? result.message : 'success',\n          data: result.data,\n        };\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filter/http-exception/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/filter/http-exception/http-exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n    const res = exception.getResponse() as { message: string[] };\n    response.status(status).json({\n      code: status,\n      message: res?.message?.join ? res?.message?.join(',') : exception.message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpResponseEntity.html":{"url":"classes/HttpResponseEntity.html","title":"class - HttpResponseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpResponseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/http/http-response-entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: number, data: object, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/shared/http/http-response-entity.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : HTTP_SUCCESS_CODE\n                    \n                \n                    \n                        \n                                Defined in src/shared/http/http-response-entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/shared/http/http-response-entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/shared/http/http-response-entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: object, code: number, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/http/http-response-entity.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    HTTP_SUCCESS_CODE\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         HttpResponseEntity\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const HTTP_SUCCESS_CODE = 0;\n\nexport class HttpResponseEntity {\n  private code: number = HTTP_SUCCESS_CODE;\n\n  private message: string = '';\n\n  private data: object = {};\n\n  constructor(code: number, data: object, message: string) {\n    this.code = code;\n    this.message = message;\n    this.data = data;\n  }\n\n  static create(\n    data: object,\n    code: number = HTTP_SUCCESS_CODE,\n    message: string = '',\n  ) {\n    return new this(code, data, message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IConfig.html":{"url":"interfaces/IConfig.html","title":"interface - IConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mysql\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            redis\n                                        \n                                \n                                \n                                        \n                                            timeout\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mysql\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mysql:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeout:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { __DEV__ } from '../utils/env.utils';\nimport { genDevelopmentConfig } from './configuration.development';\nimport { genProductionConfig } from './configuration.production';\n\nexport interface IConfig {\n  port: string | number; // 应用端口\n  timeout: string; // 超时\n  mysql: {\n    host: string;\n    port: number | string;\n    username: string;\n    password: string;\n    database: string;\n    logging: boolean;\n    synchronize: boolean;\n    poolSize: number;\n    connectorPackage: 'mysql' | 'mysql2';\n  };\n  redis: {\n    host: string;\n    port: string;\n  };\n  email: {\n    user: string;\n    pass: string;\n  };\n  jwt: {\n    secret: string;\n    accessTokenExpiresTime: string;\n    refreshTokenExpiresTime: string;\n  };\n}\n\nexport default (): IConfig => {\n  if (__DEV__) {\n    return genDevelopmentConfig();\n  }\n  return genProductionConfig();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvokeRecordInterceptor.html":{"url":"injectables/InvokeRecordInterceptor.html","title":"injectable - InvokeRecordInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvokeRecordInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/invoke-record.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/invoke-record.interceptor.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(InvokeRecordInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in src/shared/interceptors/invoke-record.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class InvokeRecordInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(InvokeRecordInterceptor.name);\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n\n    const userAgent = request.headers['user-agent'];\n\n    const { ip, method, path } = request;\n\n    // 请求触发\n    this.logger.debug(\n      `${method} ${path} ${ip} ${userAgent}: ${context.getClass().name} ${\n        context.getHandler().name\n      } invoked...`,\n    );\n\n    const now = Date.now();\n\n    return next.handle().pipe(\n      tap((res) => {\n        // 返回响应\n        this.logger.debug(\n          `${method} ${path} ${ip} ${userAgent}: ${response.statusCode}: ${\n            Date.now() - now\n          }ms`,\n        );\n        this.logger.debug(`Response: ${JSON.stringify(res)}`);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTHelperService.html":{"url":"injectables/JWTHelperService.html","title":"injectable - JWTHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JWTHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/jwt-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                configService\n                            \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                genAccessToken\n                            \n                            \n                                genRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        genAccessToken\n                        \n                    \n                \n            \n            \n                \ngenAccessToken(userVo: LoginUserVo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/jwt-helper.service.ts:19\n                        \n                    \n\n\n            \n                \n                        生成鉴权 token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userVo\n                                            \n                                                            LoginUserVo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genRefreshToken\n                        \n                    \n                \n            \n            \n                \ngenRefreshToken(userVo: LoginUserVo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/jwt-helper.service.ts:38\n                        \n                    \n\n\n            \n                \n                        生成刷新 token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userVo\n                                            \n                                                            LoginUserVo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/services/jwt-helper.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        jwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(JwtService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/services/jwt-helper.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { LoginUserVo } from 'src/modules/user/vo/login-user.vo';\n\n@Injectable()\nexport class JWTHelperService {\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  @Inject(ConfigService)\n  private configService: ConfigService;\n\n  /**\n   * 生成鉴权 token\n   * @param userVo\n   */\n  genAccessToken(userVo: LoginUserVo) {\n    return this.jwtService.sign(\n      {\n        userId: userVo.userInfo.id,\n        username: userVo.userInfo.username,\n        roles: userVo.userInfo.roles,\n        permissions: userVo.userInfo.permissions,\n      },\n      {\n        expiresIn:\n          this.configService.get('jwt.accessTokenExpiresTime') || '30m',\n      },\n    );\n  }\n\n  /**\n   * 生成刷新 token\n   * @param userVo\n   */\n  genRefreshToken(userVo: LoginUserVo) {\n    return this.jwtService.sign(\n      {\n        userId: userVo.userInfo.id,\n      },\n      {\n        expiresIn:\n          this.configService.get('jwt.refreshTokenExpiresTime') || '7d',\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtUserData.html":{"url":"interfaces/JwtUserData.html","title":"interface - JwtUserData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtUserData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/guards/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:         Permission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Permission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { OverrideNames } from 'src/constants/override-names';\nimport { Permission } from 'src/modules/user/entities/permission.entity';\n\nexport interface JwtUserData {\n  userId: number;\n  username: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject()\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    // 用 reflector 从目标 controller 和 handler 上拿到 need-login 的 metadata\n    const requireLogin = this.reflector.getAllAndOverride(\n      OverrideNames.NEED_LOGIN,\n      [context.getClass(), context.getHandler()],\n    );\n    // 如果没有 metadata，就是不需要登录，返回 true 放行\n    if (!requireLogin) {\n      return true;\n    }\n    // 从 authorization 的 header 取出 jwt 来\n    const authorization = request.headers.authorization;\n    if (!authorization) {\n      // 如果不存在鉴权 token，返回 401 响应\n      throw new UnauthorizedException('用户未登录');\n    }\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      // 如果 jwt 无效，返回 401 响应\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                jwtService\n                            \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/login.guard.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { OverrideNames } from 'src/constants/override-names';\nimport { Permission } from 'src/modules/user/entities/permission.entity';\n\nexport interface JwtUserData {\n  userId: number;\n  username: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject()\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    // 用 reflector 从目标 controller 和 handler 上拿到 need-login 的 metadata\n    const requireLogin = this.reflector.getAllAndOverride(\n      OverrideNames.NEED_LOGIN,\n      [context.getClass(), context.getHandler()],\n    );\n    // 如果没有 metadata，就是不需要登录，返回 true 放行\n    if (!requireLogin) {\n      return true;\n    }\n    // 从 authorization 的 header 取出 jwt 来\n    const authorization = request.headers.authorization;\n    if (!authorization) {\n      // 如果不存在鉴权 token，返回 401 响应\n      throw new UnauthorizedException('用户未登录');\n    }\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      // 如果 jwt 无效，返回 401 响应\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserVo.html":{"url":"classes/LoginUserVo.html","title":"class - LoginUserVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/vo/login-user.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/vo/login-user.vo.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/vo/login-user.vo.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/vo/login-user.vo.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        interface UserInfo {\n  id: number;\n  username: string;\n  nickName: string;\n  email: string;\n  avatar: string;\n  phoneNumber: string;\n  isFrozen: boolean;\n  isAdmin: boolean;\n  createTime: number;\n  roles: string[];\n  permissions: string[];\n}\n\nexport class LoginUserVo {\n  userInfo: UserInfo;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: '权限代码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/permission.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 100, comment: '权限描述'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/permission.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/permission.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity({\n  name: 'permissions',\n})\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: '权限代码',\n  })\n  code: string;\n\n  @Column({\n    length: 100,\n    comment: '权限描述',\n  })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/guards/permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/guards/permission.guard.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\n\nimport { OverrideNames } from 'src/constants/override-names';\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject()\n  private reflector: Reflector;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    if (!request.user) {\n      return true;\n    }\n    const permissions = request.user.permissions;\n    const requiredPermissions = this.reflector.getAllAndOverride(\n      OverrideNames.NEED_PERMISSIONS,\n      [context.getClass(), context.getHandler()],\n    );\n    if (!requiredPermissions) {\n      return true;\n    }\n    for (let i = 0; i  item.code === curPermission);\n      if (!found) {\n        throw new UnauthorizedException('您没有访问该接口的权限');\n      }\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisHelperService.html":{"url":"injectables/RedisHelperService.html","title":"injectable - RedisHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/redis-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                redisClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/redis-helper.service.ts:16\n                        \n                    \n\n\n            \n                \n                        获取某个 key 的值\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(key: string, value: string | number, ttl?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/services/redis-helper.service.ts:26\n                        \n                    \n\n\n            \n                \n                        设置某个 key 的值（可配置过期时间）\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisClientType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(DataBaseProviderName.REDIS_DATA_SOURCE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/services/redis-helper.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { RedisClientType } from 'redis';\nimport { Inject, Injectable } from '@nestjs/common';\n\nimport { DataBaseProviderName } from 'src/constants/provider-names';\n\n@Injectable()\nexport class RedisHelperService {\n  @Inject(DataBaseProviderName.REDIS_DATA_SOURCE)\n  private redisClient: RedisClientType;\n\n  /**\n   * 获取某个 key 的值\n   * @param key\n   * @returns\n   */\n  async get(key: string) {\n    return await this.redisClient.get(key);\n  }\n\n  /**\n   * 设置某个 key 的值（可配置过期时间）\n   * @param key\n   * @param value\n   * @param ttl\n   */\n  async set(key: string, value: string | number, ttl?: number) {\n    await this.redisClient.set(key, value);\n    if (ttl) {\n      await this.redisClient.expire(key, ttl);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/register-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                nickName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '验证码不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/register-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '邮箱不能为空'})@IsEmail({}, {message: '不是合法的邮箱格式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/register-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '昵称不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/register-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})@MinLength(6, {message: '密码不能少于 6 位'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/register-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/register-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  username: string;\n\n  @IsNotEmpty({\n    message: '昵称不能为空',\n  })\n  nickName: string;\n\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  @MinLength(6, {\n    message: '密码不能少于 6 位',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail(\n    {},\n    {\n      message: '不是合法的邮箱格式',\n    },\n  )\n  email: string;\n\n  @IsNotEmpty({\n    message: '验证码不能为空',\n  })\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/guards/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         JwtUserData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JwtUserData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\n\nimport { OverrideNames } from 'src/constants/override-names';\nimport { Permission } from 'src/modules/user/entities/permission.entity';\n\nexport interface JwtUserData {\n  userId: number;\n  username: string;\n  roles: string[];\n  permissions: Permission[];\n}\n\ndeclare module 'express' {\n  interface Request {\n    user: JwtUserData;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject()\n  private reflector: Reflector;\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const request: Request = context.switchToHttp().getRequest();\n    // 用 reflector 从目标 controller 和 handler 上拿到 need-login 的 metadata\n    const requireLogin = this.reflector.getAllAndOverride(\n      OverrideNames.NEED_LOGIN,\n      [context.getClass(), context.getHandler()],\n    );\n    // 如果没有 metadata，就是不需要登录，返回 true 放行\n    if (!requireLogin) {\n      return true;\n    }\n    // 从 authorization 的 header 取出 jwt 来\n    const authorization = request.headers.authorization;\n    if (!authorization) {\n      // 如果不存在鉴权 token，返回 401 响应\n      throw new UnauthorizedException('用户未登录');\n    }\n    try {\n      const token = authorization.split(' ')[1];\n      const data = this.jwtService.verify(token);\n      request.user = {\n        userId: data.userId,\n        username: data.username,\n        roles: data.roles,\n        permissions: data.permissions,\n      };\n      return true;\n    } catch (e) {\n      // 如果 jwt 无效，返回 401 响应\n      throw new UnauthorizedException('token 失效，请重新登录');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/role.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20, comment: '角色名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/role.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'role_permissions'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/role.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\nimport { Permission } from './permission.entity';\n\n@Entity({\n  name: 'roles',\n})\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 20,\n    comment: '角色名',\n  })\n  name: string;\n\n  @ManyToMany(() => Permission)\n  @JoinTable({\n    name: 'role_permissions',\n  })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nEmailHelperService \n\nEmailHelperService \n\n\n\nJWTHelperService \n\nJWTHelperService \n\n\n\nRedisHelperService \n\nRedisHelperService \n\n\n\nSharedModule\n\nSharedModule\n\nEmailHelperService  -->\n\nSharedModule->EmailHelperService \n\n\n\nJWTHelperService  -->\n\nSharedModule->JWTHelperService \n\n\n\nRedisHelperService  -->\n\nSharedModule->RedisHelperService \n\n\n\n\n\nEmailHelperService\n\nEmailHelperService\n\nSharedModule -->\n\nEmailHelperService->SharedModule\n\n\n\n\n\nJWTHelperService\n\nJWTHelperService\n\nSharedModule -->\n\nJWTHelperService->SharedModule\n\n\n\n\n\nRedisHelperService\n\nRedisHelperService\n\nSharedModule -->\n\nRedisHelperService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/share.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailHelperService\n                        \n                        \n                            JWTHelperService\n                        \n                        \n                            RedisHelperService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailHelperService\n                        \n                        \n                            JWTHelperService\n                        \n                        \n                            RedisHelperService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JwtModule } from '@nestjs/jwt';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\nimport { configModuleOptions } from './config/module-options';\n\n// providers\nimport { EmailProviders } from './providers/email.providers';\nimport { DataBaseProviders } from './providers/database.providers';\n// services\nimport { JWTHelperService } from './services/jwt-helper.service';\nimport { RedisHelperService } from './services/redis-helper.service';\nimport { EmailHelperService } from './services/email-helper.service';\n\n// 共享模块\n@Module({\n  imports: [\n    // 配置模块\n    ConfigModule.forRoot(configModuleOptions),\n    // JWT 模块\n    JwtModule.registerAsync({\n      global: true,\n      useFactory(configService: ConfigService) {\n        return {\n          secret: configService.get('jwt.secret'),\n          signOptions: {\n            expiresIn: '30m',\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  exports: [\n    // 数据库连接\n    ...DataBaseProviders,\n    // 建连邮箱客户端\n    ...EmailProviders,\n\n    // Redis Helper\n    RedisHelperService,\n    // Email Helper\n    EmailHelperService,\n    // JWT Helper\n    JWTHelperService,\n  ],\n  providers: [\n    // 数据库连接\n    ...DataBaseProviders,\n    // 建连邮箱客户端\n    ...EmailProviders,\n\n    // Redis Helper\n    RedisHelperService,\n    // Email Helper\n    EmailHelperService,\n    // JWT Helper\n    JWTHelperService,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/timeout-interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                configService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/interceptors/timeout-interceptor.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ConfigService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/shared/interceptors/timeout-interceptor.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  NestInterceptor,\n  RequestTimeoutException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport {\n  Observable,\n  TimeoutError,\n  catchError,\n  throwError,\n  timeout,\n} from 'rxjs';\n\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n  @Inject(ConfigService)\n  private configService: ConfigService;\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    return next.handle().pipe(\n      timeout(parseInt(this.configService.get('timeout'), 10)),\n      catchError((err) => {\n        if (err instanceof TimeoutError) {\n          console.log(err);\n          return throwError(() => new RequestTimeoutException());\n        }\n        return throwError(() => err);\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                captcha\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        captcha\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '验证码不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-password.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '邮箱不能为空'})@IsEmail({}, {message: '不是合法的邮箱格式'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-password.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})@MinLength(6, {message: '密码不能少于 6 位'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/update-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\n\nexport class UpdatePasswordDto {\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  @MinLength(6, {\n    message: '密码不能少于 6 位',\n  })\n  password: string;\n\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail(\n    {},\n    {\n      message: '不是合法的邮箱格式',\n    },\n  )\n  email: string;\n\n  @IsNotEmpty({\n    message: '验证码不能为空',\n  })\n  captcha: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isAdmin\n                            \n                            \n                                    \n                                isFrozen\n                            \n                            \n                                    \n                                nickName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                phoneNumber\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '头像', length: 100, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '邮箱', length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '是否是管理员', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFrozen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '是否冻结', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nickName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'nick_name', length: 50, comment: '昵称'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '密码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '手机号', length: 20, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '用户名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\nimport { Role } from './role.entity';\n\n@Entity({\n  name: 'users',\n})\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 50,\n    comment: '用户名',\n  })\n  username: string;\n\n  @Column({\n    length: 50,\n    comment: '密码',\n  })\n  password: string;\n\n  @Column({\n    name: 'nick_name',\n    length: 50,\n    comment: '昵称',\n  })\n  nickName: string;\n\n  @Column({\n    comment: '邮箱',\n    length: 50,\n  })\n  email: string;\n\n  @Column({\n    comment: '头像',\n    length: 100,\n    nullable: true,\n  })\n  avatar: string;\n\n  @Column({\n    comment: '手机号',\n    length: 20,\n    nullable: true,\n  })\n  phoneNumber: string;\n\n  @Column({\n    comment: '是否冻结',\n    default: false,\n  })\n  isFrozen: boolean;\n\n  @Column({\n    comment: '是否是管理员',\n    default: false,\n  })\n  isAdmin: boolean;\n\n  @CreateDateColumn()\n  createTime: Date;\n\n  @UpdateDateColumn()\n  updateTime: Date;\n\n  @ManyToMany(() => Role)\n  @JoinTable({\n    name: 'user_roles',\n  })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                adminLogin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserInfo\n                            \n                            \n                                    \n                                    Async\n                                initTestData\n                            \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                            \n                                    \n                                register\n                            \n                            \n                                    \n                                    Async\n                                sendRegisterCaptcha\n                            \n                            \n                                    \n                                    Async\n                                sendUpdatePasswordCaptcha\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updatePassword\n                            \n                            \n                                    \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        adminLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    adminLogin(userLoginParams: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('admin/login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:103\n                        \n                    \n\n\n            \n                \n                        POST 管理员登录\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoginParams\n                                            \n                                                            UserLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserInfo(userId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.info)@NeedLogin()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:148\n                        \n                    \n\n\n            \n                \n                        POST 用户信息查询\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        initTestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initTestData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test-data/init')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:73\n                        \n                    \n\n\n            \n                \n                        GET 初始化测试数据\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(refreshToken: string, isAdmin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh-token')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:121\n                        \n                    \n\n\n            \n                \n                        token 过期，刷新 Token\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:55\n                        \n                    \n\n\n            \n                \n                        POST 普通用户注册\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendRegisterCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRegisterCaptcha(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('register-captcha/send')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:64\n                        \n                    \n\n\n            \n                \n                        GET 发送用户注册所需的验证码\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendUpdatePasswordCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendUpdatePasswordCaptcha(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('update-password/captcha')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:182\n                        \n                    \n\n\n            \n                \n                        发送更新密码使用的验证码\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(userId: number, updatePasswordDto: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(['update-password', 'admin/update-password'])@NeedLogin()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:167\n                        \n                    \n\n\n            \n                \n                        POST 更新用户密码\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePasswordDto\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userLoginParams: UserLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.login)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/user/user.controller.ts:82\n                        \n                    \n\n\n            \n                \n                        POET 用户登录\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoginParams\n                                            \n                                                            UserLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Query,\n  Inject,\n  UnauthorizedException,\n  Logger,\n  BadRequestException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\n\n// dto\nimport { UserLoginDto } from './dto/user-login.dto';\nimport { RegisterUserDto } from './dto/register-user.dto';\nimport { UpdatePasswordDto } from './dto/update-password.dto';\n\n// services\nimport { UserService } from './user.service';\nimport { JWTHelperService } from './../../shared/services/jwt-helper.service';\n\n// decorators\nimport { NeedLogin } from 'src/shared/decorators/guard.decorator';\nimport { GetLoginUserInfo } from 'src/shared/decorators/user-info-decorator';\n\n// others\nimport {\n  HTTP_SUCCESS_CODE,\n  HttpResponseEntity,\n} from 'src/shared/http/http-response-entity';\nimport { UserModulePaths } from './user.path';\n\n@Controller(UserModulePaths.base)\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  private logger = new Logger();\n\n  @Inject(JwtService)\n  private jwtService: JwtService;\n\n  @Inject(ConfigService)\n  private configService: ConfigService;\n\n  @Inject(JWTHelperService)\n  private jwtHelperService: JWTHelperService;\n\n  /**\n   * POST 普通用户注册\n   * @path /user/register\n   */\n  @Post('register')\n  register(@Body() registerUserDto: RegisterUserDto) {\n    return this.userService.register(registerUserDto);\n  }\n\n  /**\n   * GET 发送用户注册所需的验证码\n   * @path /user/register-captcha/send\n   */\n  @Get('register-captcha/send')\n  async sendRegisterCaptcha(@Query('email') email: string) {\n    return this.userService.sendRegisterCaptcha(email);\n  }\n\n  /**\n   * GET 初始化测试数据\n   * @path /user/test-data/init\n   */\n  @Get('test-data/init')\n  async initTestData() {\n    return this.userService.initTestData();\n  }\n\n  /**\n   * POET 用户登录\n   * @path /user/login\n   */\n  @Post(UserModulePaths.contents.login)\n  async userLogin(@Body() userLoginParams: UserLoginDto) {\n    const userVo = await this.userService.userLogin(userLoginParams);\n    // 生成鉴权 token\n    userVo.accessToken = this.jwtHelperService.genAccessToken(userVo);\n    // 生成刷新 token\n    userVo.refreshToken = this.jwtHelperService.genRefreshToken(userVo);\n    return HttpResponseEntity.create(\n      {\n        accessToken: userVo.accessToken,\n        refreshToken: userVo.refreshToken,\n      },\n      HTTP_SUCCESS_CODE,\n      '登录成功',\n    );\n  }\n\n  /**\n   * POST 管理员登录\n   * @path /user/admin/login\n   */\n  @Post('admin/login')\n  async adminLogin(@Body() userLoginParams: UserLoginDto) {\n    const userVo = await this.userService.userLogin(\n      userLoginParams,\n      true /* isAdmin */,\n    );\n    // 生成鉴权 token\n    userVo.accessToken = this.jwtHelperService.genAccessToken(userVo);\n    // 生成刷新 token\n    userVo.refreshToken = this.jwtHelperService.genRefreshToken(userVo);\n    return userVo;\n  }\n\n  /**\n   * token 过期，刷新 Token\n   * @param refreshToken\n   * @returns\n   */\n  @Get('refresh-token')\n  async refreshToken(\n    @Query('refreshToken') refreshToken: string,\n    @Query('isAdmin') isAdmin = false,\n  ) {\n    try {\n      const data = this.jwtService.verify(refreshToken);\n      const userVo = await this.userService.findUserById(data.userId, isAdmin);\n      // 生成鉴权 token\n      const access_token = this.jwtHelperService.genAccessToken(userVo);\n      // 生成刷新 token\n      const refresh_token = this.jwtHelperService.genRefreshToken(userVo);\n      return {\n        access_token,\n        refresh_token,\n      };\n    } catch (e) {\n      this.logger.error(e.message, e.stack);\n      throw new UnauthorizedException('token 已失效，请重新登录');\n    }\n  }\n\n  /**\n   * POST 用户信息查询\n   * @path /user/info\n   */\n  @Post(UserModulePaths.contents.info)\n  @NeedLogin()\n  async getUserInfo(@GetLoginUserInfo('userId') userId: number) {\n    if (!userId) {\n      throw new UnauthorizedException('用户未登录');\n    }\n    const userVo = await this.userService.findUserById(userId);\n    // 移除铭感信息\n    delete userVo.userInfo.id;\n    delete userVo.userInfo.username;\n    delete userVo.userInfo.phoneNumber;\n    return HttpResponseEntity.create(userVo, HTTP_SUCCESS_CODE);\n  }\n\n  /**\n   * POST 更新用户密码\n   * @path /user/update-password\n   * @path /user/admin/update-password\n   */\n  @Post(['update-password', 'admin/update-password'])\n  @NeedLogin()\n  async updatePassword(\n    @GetLoginUserInfo('userId') userId: number,\n    @Body() updatePasswordDto: UpdatePasswordDto,\n  ) {\n    if (!userId) {\n      throw new UnauthorizedException('请先登录');\n    }\n    return await this.userService.updatePassword(userId, updatePasswordDto);\n  }\n\n  /**\n   * 发送更新密码使用的验证码\n   * @path /user/update-password/captcha\n   */\n  @Post('update-password/captcha')\n  async sendUpdatePasswordCaptcha(@Body() email: string) {\n    if (!email) {\n      throw new BadRequestException('请指定关联的邮箱');\n    }\n    return await this.userService.sendUpdatePasswordCaptcha(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/vo/login-user.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            createTime\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            isFrozen\n                                        \n                                \n                                \n                                        \n                                            nickName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            phoneNumber\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFrozen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFrozen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phoneNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phoneNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface UserInfo {\n  id: number;\n  username: string;\n  nickName: string;\n  email: string;\n  avatar: string;\n  phoneNumber: string;\n  isFrozen: boolean;\n  isAdmin: boolean;\n  createTime: number;\n  roles: string[];\n  permissions: string[];\n}\n\nexport class LoginUserVo {\n  userInfo: UserInfo;\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user-login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '用户名不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user-login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class UserLoginDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  username: string;\n\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { SharedModule } from 'src/shared/share.module';\nimport { UserController } from './user.controller';\nimport { UserProviders } from './user.providers';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [SharedModule],\n  controllers: [UserController],\n  providers: [UserService, ...UserProviders],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                emailHelperService\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    \n                                    Private\n                                permissionRepository\n                            \n                            \n                                    \n                                    Private\n                                redisHelperService\n                            \n                            \n                                    \n                                    Private\n                                roleRepository\n                            \n                            \n                                    \n                                    Private\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                initTestData\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                sendRegisterCaptcha\n                            \n                            \n                                    Async\n                                sendUpdatePasswordCaptcha\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(userId: number, isAdmin: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:221\n                        \n                    \n\n\n            \n                \n                        通过用户 ID 获取用户信息\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                isAdmin\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initTestData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initTestData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:125\n                        \n                    \n\n\n            \n                \n                        初始化测试数据\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserParams: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n                        普通用户注册\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserParams\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendRegisterCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendRegisterCaptcha(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:102\n                        \n                    \n\n\n            \n                \n                        发送用户注册所需的验证码\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendUpdatePasswordCaptcha\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendUpdatePasswordCaptcha(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:290\n                        \n                    \n\n\n            \n                \n                        发送更新密码使用的验证码至邮箱\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePassword(userId: number, updatePasswordDto: UpdatePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:259\n                        \n                    \n\n\n            \n                \n                        修改密码\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    用户 ID\n\n                                            \n                                        \n                                        \n                                                updatePasswordDto\n                                            \n                                                            UpdatePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    更新密码的相关参数\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userLoginParams: UserLoginDto, isAdmin)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/user/user.service.ts:174\n                        \n                    \n\n\n            \n                \n                        用户登录\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userLoginParams\n                                            \n                                                            UserLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    用户登录接口参数\n\n                                            \n                                        \n                                        \n                                                isAdmin\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    是否为管理员\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        emailHelperService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmailHelperService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(EmailHelperService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        permissionRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RepositoryProvideNames.PERMISSION_REPOSITORY)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        redisHelperService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RedisHelperService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RedisHelperService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        roleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RepositoryProvideNames.ROLE_REPOSITORY)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(RepositoryProvideNames.USER_REPOSITORY)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\nimport {\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\n\n// entity\nimport { User } from './entities/user.entity';\nimport { Role } from './entities/role.entity';\nimport { Permission } from './entities/permission.entity';\n\n// dto\nimport { RegisterUserDto } from './dto/register-user.dto';\nimport { UserLoginDto } from './dto/user-login.dto';\nimport { UpdatePasswordDto } from './dto/update-password.dto';\n\n// vo\nimport { LoginUserVo } from './vo/login-user.vo';\n\n// utils\nimport { md5Encrypt } from 'src/shared/utils/md5.utils';\nimport {\n  genCaptchaCode,\n  getCaptchaCacheKey,\n  getCaptchaCacheKeyOfUpdatePwd,\n} from './user.utils';\n\n// services\nimport { RedisHelperService } from 'src/shared/services/redis-helper.service';\nimport { EmailHelperService } from 'src/shared/services/email-helper.service';\n\n// constants\nimport { RepositoryProvideNames } from 'src/constants/provider-names';\n\n@Injectable()\nexport class UserService {\n  private logger = new Logger();\n\n  @Inject(RepositoryProvideNames.USER_REPOSITORY)\n  private userRepository: Repository;\n\n  @Inject(RepositoryProvideNames.ROLE_REPOSITORY)\n  private roleRepository: Repository;\n\n  @Inject(RepositoryProvideNames.PERMISSION_REPOSITORY)\n  private permissionRepository: Repository;\n\n  @Inject(RedisHelperService)\n  private redisHelperService: RedisHelperService;\n\n  @Inject(EmailHelperService)\n  private emailHelperService: EmailHelperService;\n\n  /**\n   * 普通用户注册\n   * @param registerUserParams\n   * @returns\n   */\n  async register(registerUserParams: RegisterUserDto) {\n    const captcha = await this.redisHelperService.get(\n      getCaptchaCacheKey(registerUserParams.email),\n    );\n\n    if (!captcha) {\n      throw new HttpException('验证码已失效', HttpStatus.BAD_REQUEST);\n    }\n\n    if (registerUserParams.captcha !== captcha) {\n      throw new HttpException('验证码不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    const usernameHasRegister = await this.userRepository.findOneBy({\n      username: registerUserParams.username,\n    });\n\n    if (usernameHasRegister) {\n      throw new HttpException('用户已存在', HttpStatus.BAD_REQUEST);\n    }\n\n    const user = new User();\n    user.username = registerUserParams.username;\n    user.password = md5Encrypt(registerUserParams.password);\n    user.email = registerUserParams.email;\n    user.nickName = registerUserParams.nickName;\n\n    try {\n      await this.userRepository.save(user);\n      return '注册成功';\n    } catch (e) {\n      this.logger.error(e, UserService);\n      return '注册失败';\n    }\n  }\n\n  /**\n   * 发送用户注册所需的验证码\n   * @param email\n   */\n  async sendRegisterCaptcha(email: string) {\n    try {\n      const code = genCaptchaCode();\n      await this.redisHelperService.set(\n        getCaptchaCacheKey(email),\n        code,\n        5 * 60,\n      );\n      await this.emailHelperService.sendMail(\n        email,\n        `您的注册验证码为：${code}`,\n        '注册验证码',\n      );\n      return '发送成功';\n    } catch (e) {\n      this.logger.error(e.message, e);\n      throw new HttpException('服务器异常', HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /**\n   * 初始化测试数据\n   */\n  async initTestData() {\n    // 管理员\n    const user1 = new User();\n    user1.username = 'admin';\n    user1.password = md5Encrypt('admin');\n    user1.email = '15235309829@163.com';\n    user1.isAdmin = true;\n    user1.nickName = '管理员';\n    user1.phoneNumber = '17777777711';\n\n    // 普通用户\n    const user2 = new User();\n    user2.username = 'userA';\n    user2.password = md5Encrypt('1234567Aa');\n    user2.email = '15235309829@163.com';\n    user2.nickName = '用户A';\n\n    const role1 = new Role();\n    role1.name = '管理员';\n\n    const role2 = new Role();\n    role2.name = '普通用户';\n\n    const permission1 = new Permission();\n    permission1.code = '/page1';\n    permission1.description = '访问页面 page1';\n\n    const permission2 = new Permission();\n    permission2.code = '/page2';\n    permission2.description = '访问页面 page2';\n\n    user1.roles = [role1];\n    user2.roles = [role2];\n\n    role1.permissions = [permission1, permission2];\n    role2.permissions = [permission1];\n\n    await this.permissionRepository.save([permission1, permission2]);\n    await this.roleRepository.save([role1, role2]);\n    await this.userRepository.save([user1, user2]);\n    return 'success';\n  }\n\n  /**\n   * 用户登录\n   * @param userLoginParams 用户登录接口参数\n   * @param isAdmin 是否为管理员\n   * @returns\n   */\n  async userLogin(userLoginParams: UserLoginDto, isAdmin = false) {\n    const user = await this.userRepository.findOne({\n      where: {\n        username: userLoginParams.username,\n        isAdmin,\n      },\n      // 级联查询 roles 和 roles.permissions\n      relations: ['roles', 'roles.permissions'],\n    });\n\n    if (!user) {\n      throw new HttpException('用户不存在', HttpStatus.BAD_REQUEST);\n    }\n\n    if (user.password !== md5Encrypt(userLoginParams.password)) {\n      throw new HttpException('密码错误', HttpStatus.BAD_REQUEST);\n    }\n\n    const userVo = new LoginUserVo();\n    userVo.userInfo = {\n      id: user.id,\n      username: user.username,\n      nickName: user.nickName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      avatar: user.avatar,\n      createTime: user.createTime.getTime(),\n      isFrozen: user.isFrozen,\n      isAdmin: user.isAdmin,\n      roles: user.roles.map((item) => item.name),\n      permissions: user.roles.reduce((arr, item) => {\n        item.permissions.forEach((permission) => {\n          if (arr.indexOf(permission) === -1) {\n            arr.push(permission);\n          }\n        });\n        return arr;\n      }, []),\n    };\n    return userVo;\n  }\n\n  /**\n   * 通过用户 ID 获取用户信息\n   * @param userId\n   * @param isAdmin\n   */\n  async findUserById(userId: number, isAdmin: boolean = false) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n        isAdmin,\n      },\n      relations: ['roles', 'roles.permissions'],\n    });\n    const userVo = new LoginUserVo();\n    userVo.userInfo = {\n      id: user.id,\n      username: user.username,\n      nickName: user.nickName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      avatar: user.avatar,\n      createTime: user.createTime.getTime(),\n      isFrozen: user.isFrozen,\n      isAdmin: user.isAdmin,\n      roles: user.roles.map((item) => item.name),\n      permissions: user.roles.reduce((arr, item) => {\n        item.permissions.forEach((permission) => {\n          if (arr.indexOf(permission) === -1) {\n            arr.push(permission);\n          }\n        });\n        return arr;\n      }, []),\n    };\n    return userVo;\n  }\n\n  /**\n   * 修改密码\n   * @param userId 用户 ID\n   * @param updatePasswordDto 更新密码的相关参数\n   * @returns\n   */\n  async updatePassword(userId: number, updatePasswordDto: UpdatePasswordDto) {\n    const captcha = await this.redisHelperService.get(\n      getCaptchaCacheKeyOfUpdatePwd(updatePasswordDto.email),\n    );\n\n    if (!captcha) {\n      throw new HttpException('验证码已失效', HttpStatus.BAD_REQUEST);\n    }\n\n    if (updatePasswordDto.captcha !== captcha) {\n      throw new HttpException('验证码不正确', HttpStatus.BAD_REQUEST);\n    }\n\n    try {\n      const user = await this.userRepository.findOneBy({\n        id: userId,\n      });\n      user.password = md5Encrypt(updatePasswordDto.password);\n      await this.userRepository.save(user);\n      return '密码修改成功';\n    } catch (e) {\n      this.logger.error(e, UserService);\n      return '密码修改失败';\n    }\n  }\n\n  /**\n   * 发送更新密码使用的验证码至邮箱\n   * @param email\n   * @returns\n   */\n  async sendUpdatePasswordCaptcha(email: string) {\n    try {\n      const code = genCaptchaCode();\n      await this.redisHelperService.set(\n        getCaptchaCacheKeyOfUpdatePwd(email),\n        code,\n        5 * 60,\n      );\n      await this.emailHelperService.sendMail(\n        email,\n        `您的注册验证码为：${code}`,\n        '注册验证码',\n      );\n      return '发送成功';\n    } catch (e) {\n      this.logger.error(e.message, e);\n      throw new HttpException('服务器异常', HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/constants/override-names.ts\n            \n            variable\n            OverrideNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/provider-names.ts\n            \n            variable\n            DataBaseProviderName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/provider-names.ts\n            \n            variable\n            EmailProviderName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants/provider-names.ts\n            \n            variable\n            RepositoryProvideNames\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-password.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/modules/user/user.path.ts\n            \n            variable\n            UserModulePaths\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.providers.ts\n            \n            variable\n            UserProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                src/modules/user/user.utils.ts\n            \n            variable\n            CaptchaCachePrefix\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.utils.ts\n            \n            variable\n            genCaptchaCode\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.utils.ts\n            \n            variable\n            getCaptchaCacheKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.utils.ts\n            \n            variable\n            getCaptchaCacheKeyOfUpdatePwd\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/user/vo/login-user.vo.ts\n            \n            class\n            LoginUserVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/user/vo/login-user.vo.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.development.ts\n            \n            variable\n            genDevelopmentConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.production.ts\n            \n            variable\n            genProductionConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            IConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/config/module-options.ts\n            \n            variable\n            configModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/module-options.ts\n            \n            variable\n            envFilePath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/guard.decorator.ts\n            \n            variable\n            NeedLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/guard.decorator.ts\n            \n            variable\n            NeedPermissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/user-info-decorator.ts\n            \n            variable\n            GetLoginUserInfo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/filter/http-exception/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/guards/login.guard.ts\n            \n            interface\n            JwtUserData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/guards/login.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/guards/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/guards/permission.guard.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/http/http-response-entity.ts\n            \n            class\n            HttpResponseEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/http/http-response-entity.ts\n            \n            variable\n            HTTP_SUCCESS_CODE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/interceptors/format-response.interceptor.ts\n            \n            injectable\n            FormatResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/invoke-record.interceptor.ts\n            \n            injectable\n            InvokeRecordInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interceptors/timeout-interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/providers/database.providers.ts\n            \n            variable\n            DataBaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/providers/email.providers.ts\n            \n            variable\n            EmailProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/providers/guard.providers.ts\n            \n            variable\n            GuardProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/providers/interceptor.providers.ts\n            \n            variable\n            InterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/email-helper.service.ts\n            \n            injectable\n            EmailHelperService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/shared/services/jwt-helper.service.ts\n            \n            injectable\n            JWTHelperService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/shared/services/redis-helper.service.ts\n            \n            injectable\n            RedisHelperService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/shared/utils/env.utils.ts\n            \n            variable\n            __DEV__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/env.utils.ts\n            \n            variable\n            __PROD__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/md5.utils.ts\n            \n            variable\n            md5Encrypt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/shared/utils/md5.utils.ts\n            \n            variable\n            SALT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @types/nodemailer : ^6.4.10\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cross-env : ^7.0.3\n        \n            mysql2 : ^3.6.1\n        \n            nodemailer : ^6.9.5\n        \n            redis : ^4.6.10\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nSharedModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nEmailHelperService \n\nEmailHelperService \n\nEmailHelperService  -->\n\nSharedModule->EmailHelperService \n\n\n\n\n\nJWTHelperService \n\nJWTHelperService \n\nJWTHelperService  -->\n\nSharedModule->JWTHelperService \n\n\n\n\n\nRedisHelperService \n\nRedisHelperService \n\nRedisHelperService  -->\n\nSharedModule->RedisHelperService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nEmailHelperService\n\nEmailHelperService\n\nSharedModule -->\n\nEmailHelperService->SharedModule\n\n\n\n\n\nJWTHelperService\n\nJWTHelperService\n\nSharedModule -->\n\nJWTHelperService->SharedModule\n\n\n\n\n\nRedisHelperService\n\nRedisHelperService\n\nSharedModule -->\n\nRedisHelperService->SharedModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __DEV__   (src/.../env.utils.ts)\n                        \n                        \n                            __PROD__   (src/.../env.utils.ts)\n                        \n                        \n                            CaptchaCachePrefix   (src/.../user.utils.ts)\n                        \n                        \n                            configModuleOptions   (src/.../module-options.ts)\n                        \n                        \n                            DataBaseProviderName   (src/.../provider-names.ts)\n                        \n                        \n                            DataBaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            EmailProviderName   (src/.../provider-names.ts)\n                        \n                        \n                            EmailProviders   (src/.../email.providers.ts)\n                        \n                        \n                            envFilePath   (src/.../module-options.ts)\n                        \n                        \n                            genCaptchaCode   (src/.../user.utils.ts)\n                        \n                        \n                            genDevelopmentConfig   (src/.../configuration.development.ts)\n                        \n                        \n                            genProductionConfig   (src/.../configuration.production.ts)\n                        \n                        \n                            getCaptchaCacheKey   (src/.../user.utils.ts)\n                        \n                        \n                            getCaptchaCacheKeyOfUpdatePwd   (src/.../user.utils.ts)\n                        \n                        \n                            GetLoginUserInfo   (src/.../user-info-decorator.ts)\n                        \n                        \n                            GuardProviders   (src/.../guard.providers.ts)\n                        \n                        \n                            HTTP_SUCCESS_CODE   (src/.../http-response-entity.ts)\n                        \n                        \n                            InterceptorProviders   (src/.../interceptor.providers.ts)\n                        \n                        \n                            md5Encrypt   (src/.../md5.utils.ts)\n                        \n                        \n                            NeedLogin   (src/.../guard.decorator.ts)\n                        \n                        \n                            NeedPermissions   (src/.../guard.decorator.ts)\n                        \n                        \n                            OverrideNames   (src/.../override-names.ts)\n                        \n                        \n                            RepositoryProvideNames   (src/.../provider-names.ts)\n                        \n                        \n                            SALT   (src/.../md5.utils.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.ts)\n                        \n                        \n                            UserModulePaths   (src/.../user.path.ts)\n                        \n                        \n                            UserProviders   (src/.../user.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/utils/env.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __DEV__\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'development'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        __PROD__\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV === 'production'\n                    \n                \n\n\n        \n    \n\n    src/modules/user/user.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CaptchaCachePrefix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'captcha'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genCaptchaCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return Math.random().toString().slice(2, 8);\n}\n                    \n                \n\n            \n                \n                    生成随机验证码\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCaptchaCacheKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (email: string, prefix?: string) => {\n  return (prefix ? prefix : CaptchaCachePrefix) + '__' + email;\n}\n                    \n                \n\n            \n                \n                    获取验证码缓存 key\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCaptchaCacheKeyOfUpdatePwd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (email: string) => {\n  return getCaptchaCacheKey(email, 'UPDATE_PASSWORD');\n}\n                    \n                \n\n            \n                \n                    获取更新密码所用的验证码缓存 key\n\n                \n            \n\n        \n    \n\n    src/shared/config/module-options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  ignoreEnvFile: __PROD__ ? true : false,\n  isGlobal: true,\n  envFilePath: envFilePath,\n  load: [configuration],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        envFilePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['.env']\n                    \n                \n\n\n        \n    \n\n    src/constants/provider-names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataBaseProviderName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.freeze({\n  MYSQL_DATA_SOURCE: 'MYSQL_DATA_SOURCE', // mysql\n  REDIS_DATA_SOURCE: 'REDIS_DATA_SOURCE', // redis\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EmailProviderName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'EMAIL_CLIENT'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RepositoryProvideNames\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.freeze({\n  USER_REPOSITORY: 'USER_REPOSITORY', // users 表\n  ROLE_REPOSITORY: 'ROLE_REPOSITORY', // roles 表\n  PERMISSION_REPOSITORY: 'PERMISSION_REPOSITORY', // permissions 表\n})\n                    \n                \n\n\n        \n    \n\n    src/shared/providers/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DataBaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n  // 连接 mysql\n  {\n    provide: DataBaseProviderName.MYSQL_DATA_SOURCE,\n    inject: [ConfigService],\n    useFactory: async (configService: ConfigService) => {\n      console.log('配置', configService);\n      const config: DataSourceOptions = {\n        type: 'mysql',\n        host: configService.get('mysql.host'),\n        port: configService.get('mysql.port'),\n        username: configService.get('mysql.username'),\n        password: configService.get('mysql.password'),\n        database: configService.get('mysql.database'),\n        synchronize: configService.get('mysql.synchronize'),\n        logging: configService.get('mysql.logging'),\n        entities,\n        poolSize: configService.get('mysql.poolSize'),\n        connectorPackage: configService.get(\n          'mysql.connectorPackage',\n        ),\n      };\n      const ds = new DataSource(config);\n      await ds.initialize();\n      return ds;\n    },\n  },\n  // 连接 redis\n  {\n    provide: DataBaseProviderName.REDIS_DATA_SOURCE,\n    inject: [ConfigService],\n    useFactory: async (configService: ConfigService) => {\n      const client = createClient({\n        socket: {\n          host: configService.get('redis.user'),\n          port: configService.get('redis.port'),\n        },\n        database: 1,\n      });\n      await client.connect();\n      return client;\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/shared/providers/email.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmailProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n  // 邮箱客户端\n  {\n    provide: EmailProviderName,\n    inject: [ConfigService],\n    useFactory: async (configService: ConfigService) => {\n      const transporter = createTransport({\n        host: 'smtp.qq.com',\n        port: 587,\n        secure: false,\n        auth: {\n          user: configService.get('email.user'),\n          pass: configService.get('email.pass'),\n        },\n      });\n      return transporter;\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/shared/config/configuration.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        genDevelopmentConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IConfig => {\n  return {\n    port: process.env.PORT,\n    timeout: process.env.TIMEOUT,\n    mysql: {\n      host: process.env.MYSQL_HOST,\n      port: process.env.MYSQL_PORT,\n      username: process.env.MYSQL_USERNAME,\n      password: process.env.MYSQL_PASSWORD,\n      database: process.env.MYSQL_DATABASE,\n      logging: true,\n      synchronize: true,\n      poolSize: 10,\n      connectorPackage: 'mysql2',\n    },\n    redis: {\n      host: process.env.REDIS_HOST,\n      port: process.env.REDIS_PORT,\n    },\n    email: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASS,\n    },\n    jwt: {\n      secret: process.env.JWT_SECRET,\n      accessTokenExpiresTime: process.env.JWT_ACCESS_TOKEN_EXPIRES_TIME,\n      refreshTokenExpiresTime: process.env.JWT_REFRESH_TOKEN_EXPIRES_TIME,\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/config/configuration.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        genProductionConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IConfig => {\n  return {\n    port: process.env.PORT,\n    timeout: process.env.TIMEOUT,\n    mysql: {\n      host: process.env.MYSQL_HOST,\n      port: process.env.MYSQL_PORT,\n      username: process.env.MYSQL_USERNAME,\n      password: process.env.MYSQL_PASSWORD,\n      database: process.env.MYSQL_DATABASE,\n      logging: true,\n      synchronize: true,\n      poolSize: 10,\n      connectorPackage: 'mysql2',\n    },\n    redis: {\n      host: process.env.REDIS_HOST,\n      port: process.env.REDIS_PORT,\n    },\n    email: {\n      user: process.env.EMAIL_USER,\n      pass: process.env.EMAIL_PASS,\n    },\n    jwt: {\n      secret: process.env.JWT_SECRET,\n      accessTokenExpiresTime: process.env.JWT_ACCESS_TOKEN_EXPIRES_TIME,\n      refreshTokenExpiresTime: process.env.JWT_REFRESH_TOKEN_EXPIRES_TIME,\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/decorators/user-info-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetLoginUserInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (key: string, ctx: ExecutionContext) => {\n    const request: Request = ctx.switchToHttp().getRequest();\n    if (!request.user) {\n      return null;\n    }\n    return key ? request.user[key] : request.user;\n  },\n)\n                    \n                \n\n            \n                \n                    获取登录的用户信息\n\n                \n            \n\n        \n    \n\n    src/shared/providers/guard.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GuardProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // 登录守卫\n  {\n    provide: APP_GUARD,\n    useClass: LoginGuard,\n  },\n  // 权限守卫\n  {\n    provide: APP_GUARD,\n    useClass: PermissionGuard,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/shared/http/http-response-entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HTTP_SUCCESS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n\n\n        \n    \n\n    src/shared/providers/interceptor.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // 响应格式化拦截器\n  {\n    provide: APP_INTERCEPTOR,\n    useClass: FormatResponseInterceptor,\n  },\n  // 请求日志记录拦截器\n  {\n    provide: APP_INTERCEPTOR,\n    useClass: InvokeRecordInterceptor,\n  },\n  // 超时拦截器\n  {\n    provide: APP_INTERCEPTOR,\n    useClass: TimeoutInterceptor,\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/shared/utils/md5.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        md5Encrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (str: string) => {\n  const hash = crypto.createHash('md5');\n  hash.update(SALT + str + SALT);\n  return hash.digest('hex');\n}\n                    \n                \n\n            \n                \n                    md5 加密字符串\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SALT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#132A4FDS42#'\n                    \n                \n\n\n        \n    \n\n    src/shared/decorators/guard.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NeedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(OverrideNames.NEED_LOGIN, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NeedPermissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: string[]) =>\n  SetMetadata(OverrideNames.NEED_PERMISSIONS, permissions)\n                    \n                \n\n\n        \n    \n\n    src/constants/override-names.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OverrideNames\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.freeze({\n  NEED_LOGIN: 'need-login', // 需要登录\n  NEED_PERMISSIONS: 'need-permissions', // 需要权限\n})\n                    \n                \n\n\n        \n    \n\n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .setTitle('Nest Server')\n  .setDescription('Nest 服务 API 文档')\n  .setVersion('1.0')\n  .addTag('test')\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/modules/user/user.path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserModulePaths\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  base: 'user',\n  contents: {\n    /** @path POST /user/login 用户登录 */\n    login: 'login',\n    /** @path POST /user/info 用户信息查询 */\n    info: 'info',\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/user/user.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // 用户表 users\n  {\n    provide: RepositoryProvideNames.USER_REPOSITORY,\n    useFactory: async (AppDataSource) =>\n      await AppDataSource.getRepository(User),\n    inject: [DataBaseProviderName.MYSQL_DATA_SOURCE],\n  },\n  // 角色表 roles\n  {\n    provide: RepositoryProvideNames.ROLE_REPOSITORY,\n    useFactory: async (AppDataSource) =>\n      await AppDataSource.getRepository(Role),\n    inject: [DataBaseProviderName.MYSQL_DATA_SOURCE],\n  },\n  // 权限表 permissions\n  {\n    provide: RepositoryProvideNames.PERMISSION_REPOSITORY,\n    useFactory: async (AppDataSource) =>\n      await AppDataSource.getRepository(Permission),\n    inject: [DataBaseProviderName.MYSQL_DATA_SOURCE],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
